exports.ids = [5];
exports.modules = {

/***/ "MJJn":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export NgSelectModuleNgFactory */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return RenderType_NgSelectComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return View_NgSelectComponent_0; });
/* unused harmony export View_NgSelectComponent_Host_0 */
/* unused harmony export NgSelectComponentNgFactory */
/* unused harmony export RenderType_ɵq */
/* unused harmony export View_ɵq_0 */
/* unused harmony export View_ɵq_Host_0 */
/* unused harmony export ɵqNgFactory */
/* unused harmony export RenderType_ɵr */
/* unused harmony export View_ɵr_0 */
/* unused harmony export View_ɵr_Host_0 */
/* unused harmony export ɵrNgFactory */
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("8Y7J");
/* harmony import */ var _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("wTG2");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("SVse");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("s7LF");
/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 *
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */ 




var NgSelectModuleNgFactory = _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵcmf */ "Rb"](_ng_select_ng_select__WEBPACK_IMPORTED_MODULE_1__[/* NgSelectModule */ "c"], [], function (_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵmod */ "ec"]([_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵmpd */ "fc"](512, _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ComponentFactoryResolver */ "p"], _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵCodegenComponentFactoryResolver */ "Bb"], [[8, []], [3, _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ComponentFactoryResolver */ "p"]], _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* NgModuleRef */ "N"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵmpd */ "fc"](4608, _angular_common__WEBPACK_IMPORTED_MODULE_2__[/* NgLocalization */ "n"], _angular_common__WEBPACK_IMPORTED_MODULE_2__[/* NgLocaleLocalization */ "m"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* LOCALE_ID */ "H"], [2, _angular_common__WEBPACK_IMPORTED_MODULE_2__[/* ɵangular_packages_common_common_a */ "F"]]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵmpd */ "fc"](1073742336, _angular_common__WEBPACK_IMPORTED_MODULE_2__[/* CommonModule */ "c"], _angular_common__WEBPACK_IMPORTED_MODULE_2__[/* CommonModule */ "c"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵmpd */ "fc"](1073742336, _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_1__[/* NgSelectModule */ "c"], _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_1__[/* NgSelectModule */ "c"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵmpd */ "fc"](256, _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_1__[/* SELECTION_MODEL_FACTORY */ "d"], _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_1__[/* ɵb */ "e"], [])]); });

var styles_NgSelectComponent = [".ng-select{position:relative;display:block;box-sizing:border-box}.ng-select div,.ng-select input,.ng-select span{box-sizing:border-box}.ng-select [hidden]{display:none}.ng-select.ng-select-searchable .ng-select-container .ng-value-container .ng-input{opacity:1}.ng-select.ng-select-opened .ng-select-container{z-index:1001}.ng-select.ng-select-disabled .ng-select-container .ng-value-container .ng-placeholder,.ng-select.ng-select-disabled .ng-select-container .ng-value-container .ng-value{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.ng-select.ng-select-disabled .ng-arrow-wrapper{cursor:default}.ng-select.ng-select-filtered .ng-placeholder{display:none}.ng-select .ng-select-container{color:#333;cursor:default;display:-webkit-box;display:flex;outline:0;overflow:hidden;position:relative;width:100%}.ng-select .ng-select-container .ng-value-container{display:-webkit-box;display:flex;-webkit-box-flex:1;flex:1}.ng-select .ng-select-container .ng-value-container .ng-input{opacity:0}.ng-select .ng-select-container .ng-value-container .ng-input>input{box-sizing:content-box;background:none;border:0;box-shadow:none;outline:0;cursor:default;width:100%}.ng-select .ng-select-container .ng-value-container .ng-input>input::-ms-clear{display:none}.ng-select .ng-select-container .ng-value-container .ng-input>input[readonly]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:0;padding:0}.ng-select.ng-select-single.ng-select-filtered .ng-select-container .ng-value-container .ng-value{visibility:hidden}.ng-select.ng-select-single .ng-select-container .ng-value-container,.ng-select.ng-select-single .ng-select-container .ng-value-container .ng-value{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.ng-select.ng-select-single .ng-select-container .ng-value-container .ng-value .ng-value-icon{display:none}.ng-select.ng-select-single .ng-select-container .ng-value-container .ng-input{position:absolute;left:0;width:100%}.ng-select.ng-select-multiple.ng-select-disabled>.ng-select-container .ng-value-container .ng-value .ng-value-icon{display:none}.ng-select.ng-select-multiple .ng-select-container .ng-value-container{flex-wrap:wrap}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value{white-space:nowrap}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value.ng-value-disabled .ng-value-icon{display:none}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value .ng-value-icon{cursor:pointer}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-input{-webkit-box-flex:1;flex:1;z-index:2}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-placeholder{position:absolute;z-index:1}.ng-select .ng-clear-wrapper{cursor:pointer;position:relative;width:17px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.ng-select .ng-clear-wrapper .ng-clear{display:inline-block;font-size:18px;line-height:1;pointer-events:none}.ng-select .ng-spinner-loader{border-radius:50%;width:17px;height:17px;margin-right:5px;font-size:10px;position:relative;text-indent:-9999em;border-top:2px solid rgba(66,66,66,.2);border-right:2px solid rgba(66,66,66,.2);border-bottom:2px solid rgba(66,66,66,.2);border-left:2px solid #424242;-webkit-transform:translateZ(0);transform:translateZ(0);-webkit-animation:.8s linear infinite load8;animation:.8s linear infinite load8}.ng-select .ng-spinner-loader:after{border-radius:50%;width:17px;height:17px}@-webkit-keyframes load8{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes load8{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}.ng-select .ng-arrow-wrapper{cursor:pointer;position:relative;text-align:center;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.ng-select .ng-arrow-wrapper .ng-arrow{pointer-events:none;display:inline-block;height:0;width:0;position:relative}.ng-dropdown-panel{box-sizing:border-box;position:absolute;opacity:0;width:100%;z-index:1050;-webkit-overflow-scrolling:touch}.ng-dropdown-panel .ng-dropdown-panel-items{display:block;height:auto;box-sizing:border-box;max-height:240px;overflow-y:auto}.ng-dropdown-panel .ng-dropdown-panel-items .ng-optgroup{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.ng-dropdown-panel .ng-dropdown-panel-items .ng-option{box-sizing:border-box;cursor:pointer;display:block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.ng-dropdown-panel .ng-dropdown-panel-items .ng-option .highlighted{font-weight:700;text-decoration:underline}.ng-dropdown-panel .ng-dropdown-panel-items .ng-option.disabled{cursor:default}.ng-dropdown-panel .scroll-host{overflow:hidden;overflow-y:auto;position:relative;display:block;-webkit-overflow-scrolling:touch}.ng-dropdown-panel .scrollable-content{top:0;left:0;width:100%;height:100%;position:absolute}.ng-dropdown-panel .total-padding{width:1px;opacity:0}"];
var RenderType_NgSelectComponent = _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵcrt */ "Sb"]({ encapsulation: 2, styles: styles_NgSelectComponent, data: {} });

function View_NgSelectComponent_3(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵvid */ "sc"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵeld */ "Ub"](0, 0, null, null, 1, "span", [["aria-hidden", "true"], ["class", "ng-value-icon left"]], null, [[null, "click"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if (("click" === en)) {
        var pd_0 = (_co.unselect(_v.parent.context.$implicit) !== false);
        ad = (pd_0 && ad);
    } return ad; }, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵted */ "qc"](-1, null, ["\u00D7"])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵeld */ "Ub"](2, 0, null, null, 1, "span", [["class", "ng-value-label"]], null, null, null, null, null)), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵdid */ "Tb"](3, 540672, null, 0, _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_1__[/* ɵe */ "g"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ElementRef */ "u"]], { ngItemLabel: [0, "ngItemLabel"], escape: [1, "escape"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _v.parent.context.$implicit.label; var currVal_1 = _co.escapeHTML; _ck(_v, 3, 0, currVal_0, currVal_1); }, null); }
function View_NgSelectComponent_4(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵvid */ "sc"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵand */ "Lb"](0, null, null, 0))], null, null); }
function View_NgSelectComponent_2(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵvid */ "sc"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵeld */ "Ub"](0, 0, null, null, 4, "div", [["class", "ng-value"]], [[2, "ng-value-disabled", null]], null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵand */ "Lb"](0, [["defaultLabelTemplate", 2]], null, 0, null, View_NgSelectComponent_3)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵand */ "Lb"](16777216, null, null, 2, null, View_NgSelectComponent_4)), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵdid */ "Tb"](3, 540672, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__[/* NgTemplateOutlet */ "r"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ViewContainerRef */ "nb"]], { ngTemplateOutletContext: [0, "ngTemplateOutletContext"], ngTemplateOutlet: [1, "ngTemplateOutlet"] }, null), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵpod */ "kc"](4, { item: 0, clear: 1, label: 2 })], function (_ck, _v) { var _co = _v.component; var currVal_1 = _ck(_v, 4, 0, _v.context.$implicit.value, _co.clearItem, _v.context.$implicit.label); var currVal_2 = (_co.labelTemplate || _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵnov */ "hc"](_v, 1)); _ck(_v, 3, 0, currVal_1, currVal_2); }, function (_ck, _v) { var currVal_0 = _v.context.$implicit.disabled; _ck(_v, 0, 0, currVal_0); }); }
function View_NgSelectComponent_1(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵvid */ "sc"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵeld */ "Ub"](0, 0, null, null, 2, null, null, null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵand */ "Lb"](16777216, null, null, 1, null, View_NgSelectComponent_2)), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵdid */ "Tb"](2, 278528, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__[/* NgForOf */ "k"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ViewContainerRef */ "nb"], _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* TemplateRef */ "ib"], _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* IterableDiffers */ "F"]], { ngForOf: [0, "ngForOf"], ngForTrackBy: [1, "ngForTrackBy"] }, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵand */ "Lb"](0, null, null, 0))], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.selectedItems; var currVal_1 = _co.trackByOption; _ck(_v, 2, 0, currVal_0, currVal_1); }, null); }
function View_NgSelectComponent_6(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵvid */ "sc"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵand */ "Lb"](0, null, null, 0))], null, null); }
function View_NgSelectComponent_5(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵvid */ "sc"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵand */ "Lb"](16777216, null, null, 2, null, View_NgSelectComponent_6)), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵdid */ "Tb"](1, 540672, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__[/* NgTemplateOutlet */ "r"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ViewContainerRef */ "nb"]], { ngTemplateOutletContext: [0, "ngTemplateOutletContext"], ngTemplateOutlet: [1, "ngTemplateOutlet"] }, null), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵpod */ "kc"](2, { items: 0, clear: 1 }), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵand */ "Lb"](0, null, null, 0))], function (_ck, _v) { var _co = _v.component; var currVal_0 = _ck(_v, 2, 0, _co.selectedValues, _co.clearItem); var currVal_1 = _co.multiLabelTemplate; _ck(_v, 1, 0, currVal_0, currVal_1); }, null); }
function View_NgSelectComponent_8(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵvid */ "sc"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵeld */ "Ub"](0, 0, null, null, 0, "div", [["class", "ng-spinner-loader"]], null, null, null, null, null))], null, null); }
function View_NgSelectComponent_9(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵvid */ "sc"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵand */ "Lb"](0, null, null, 0))], null, null); }
function View_NgSelectComponent_7(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵvid */ "sc"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵeld */ "Ub"](0, 0, null, null, 3, null, null, null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵand */ "Lb"](0, [["defaultLoadingSpinnerTemplate", 2]], null, 0, null, View_NgSelectComponent_8)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵand */ "Lb"](16777216, null, null, 1, null, View_NgSelectComponent_9)), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵdid */ "Tb"](3, 540672, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__[/* NgTemplateOutlet */ "r"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ViewContainerRef */ "nb"]], { ngTemplateOutlet: [0, "ngTemplateOutlet"] }, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵand */ "Lb"](0, null, null, 0))], function (_ck, _v) { var _co = _v.component; var currVal_0 = (_co.loadingSpinnerTemplate || _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵnov */ "hc"](_v, 1)); _ck(_v, 3, 0, currVal_0); }, null); }
function View_NgSelectComponent_10(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵvid */ "sc"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵeld */ "Ub"](0, 0, null, null, 2, "span", [["class", "ng-clear-wrapper"]], [[8, "title", 0]], null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵeld */ "Ub"](1, 0, null, null, 1, "span", [["aria-hidden", "true"], ["class", "ng-clear"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵted */ "qc"](-1, null, ["\u00D7"]))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵinlineInterpolate */ "Yb"](1, "", _co.clearAllText, ""); _ck(_v, 0, 0, currVal_0); }); }
function View_NgSelectComponent_13(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵvid */ "sc"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵeld */ "Ub"](0, 0, null, null, 1, "span", [["class", "ng-option-label"]], null, null, null, null, null)), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵdid */ "Tb"](1, 540672, null, 0, _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_1__[/* ɵe */ "g"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ElementRef */ "u"]], { ngItemLabel: [0, "ngItemLabel"], escape: [1, "escape"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _v.parent.context.$implicit.label; var currVal_1 = _co.escapeHTML; _ck(_v, 1, 0, currVal_0, currVal_1); }, null); }
function View_NgSelectComponent_14(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵvid */ "sc"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵand */ "Lb"](0, null, null, 0))], null, null); }
function View_NgSelectComponent_12(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵvid */ "sc"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵeld */ "Ub"](0, 0, null, null, 4, "div", [["class", "ng-option"]], [[1, "role", 0], [2, "ng-option-disabled", null], [2, "ng-option-selected", null], [2, "ng-optgroup", null], [2, "ng-option", null], [2, "ng-option-child", null], [2, "ng-option-marked", null], [1, "aria-selected", 0], [1, "id", 0]], [[null, "click"], [null, "mouseover"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if (("click" === en)) {
        var pd_0 = (_co.toggleItem(_v.context.$implicit) !== false);
        ad = (pd_0 && ad);
    } if (("mouseover" === en)) {
        var pd_1 = (_co.onItemHover(_v.context.$implicit) !== false);
        ad = (pd_1 && ad);
    } return ad; }, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵand */ "Lb"](0, [["defaultOptionTemplate", 2]], null, 0, null, View_NgSelectComponent_13)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵand */ "Lb"](16777216, null, null, 2, null, View_NgSelectComponent_14)), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵdid */ "Tb"](3, 540672, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__[/* NgTemplateOutlet */ "r"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ViewContainerRef */ "nb"]], { ngTemplateOutletContext: [0, "ngTemplateOutletContext"], ngTemplateOutlet: [1, "ngTemplateOutlet"] }, null), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵpod */ "kc"](4, { item: 0, item$: 1, index: 2, searchTerm: 3 })], function (_ck, _v) { var _co = _v.component; var currVal_9 = _ck(_v, 4, 0, _v.context.$implicit.value, _v.context.$implicit, _v.context.$implicit.index, _co.searchTerm); var currVal_10 = (_v.context.$implicit.children ? (_co.optgroupTemplate || _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵnov */ "hc"](_v, 1)) : (_co.optionTemplate || _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵnov */ "hc"](_v, 1))); _ck(_v, 3, 0, currVal_9, currVal_10); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = (_v.context.$implicit.children ? "group" : "option"); var currVal_1 = _v.context.$implicit.disabled; var currVal_2 = _v.context.$implicit.selected; var currVal_3 = _v.context.$implicit.children; var currVal_4 = !_v.context.$implicit.children; var currVal_5 = !!_v.context.$implicit.parent; var currVal_6 = (_v.context.$implicit === _co.itemsList.markedItem); var currVal_7 = _v.context.$implicit.selected; var currVal_8 = ((_v.context.$implicit == null) ? null : _v.context.$implicit.htmlId); _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7, currVal_8); }); }
function View_NgSelectComponent_16(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵvid */ "sc"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵeld */ "Ub"](0, 0, null, null, 3, "span", [], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵeld */ "Ub"](1, 0, null, null, 1, "span", [["class", "ng-tag-label"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵted */ "qc"](2, null, ["", ""])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵted */ "qc"](3, null, ["\"", "\""]))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.addTagText; _ck(_v, 2, 0, currVal_0); var currVal_1 = _co.searchTerm; _ck(_v, 3, 0, currVal_1); }); }
function View_NgSelectComponent_17(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵvid */ "sc"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵand */ "Lb"](0, null, null, 0))], null, null); }
function View_NgSelectComponent_15(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵvid */ "sc"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵeld */ "Ub"](0, 0, null, null, 4, "div", [["class", "ng-option"], ["role", "option"]], [[2, "ng-option-marked", null]], [[null, "mouseover"], [null, "click"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if (("mouseover" === en)) {
        var pd_0 = (_co.itemsList.unmarkItem() !== false);
        ad = (pd_0 && ad);
    } if (("click" === en)) {
        var pd_1 = (_co.selectTag() !== false);
        ad = (pd_1 && ad);
    } return ad; }, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵand */ "Lb"](0, [["defaultTagTemplate", 2]], null, 0, null, View_NgSelectComponent_16)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵand */ "Lb"](16777216, null, null, 2, null, View_NgSelectComponent_17)), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵdid */ "Tb"](3, 540672, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__[/* NgTemplateOutlet */ "r"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ViewContainerRef */ "nb"]], { ngTemplateOutletContext: [0, "ngTemplateOutletContext"], ngTemplateOutlet: [1, "ngTemplateOutlet"] }, null), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵpod */ "kc"](4, { searchTerm: 0 })], function (_ck, _v) { var _co = _v.component; var currVal_1 = _ck(_v, 4, 0, _co.searchTerm); var currVal_2 = (_co.tagTemplate || _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵnov */ "hc"](_v, 1)); _ck(_v, 3, 0, currVal_1, currVal_2); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = !_co.itemsList.markedItem; _ck(_v, 0, 0, currVal_0); }); }
function View_NgSelectComponent_19(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵvid */ "sc"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵeld */ "Ub"](0, 0, null, null, 1, "div", [["class", "ng-option ng-option-disabled"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵted */ "qc"](1, null, ["", ""]))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.notFoundText; _ck(_v, 1, 0, currVal_0); }); }
function View_NgSelectComponent_20(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵvid */ "sc"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵand */ "Lb"](0, null, null, 0))], null, null); }
function View_NgSelectComponent_18(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵvid */ "sc"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵeld */ "Ub"](0, 0, null, null, 4, null, null, null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵand */ "Lb"](0, [["defaultNotFoundTemplate", 2]], null, 0, null, View_NgSelectComponent_19)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵand */ "Lb"](16777216, null, null, 2, null, View_NgSelectComponent_20)), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵdid */ "Tb"](3, 540672, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__[/* NgTemplateOutlet */ "r"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ViewContainerRef */ "nb"]], { ngTemplateOutletContext: [0, "ngTemplateOutletContext"], ngTemplateOutlet: [1, "ngTemplateOutlet"] }, null), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵpod */ "kc"](4, { searchTerm: 0 }), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵand */ "Lb"](0, null, null, 0))], function (_ck, _v) { var _co = _v.component; var currVal_0 = _ck(_v, 4, 0, _co.searchTerm); var currVal_1 = (_co.notFoundTemplate || _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵnov */ "hc"](_v, 1)); _ck(_v, 3, 0, currVal_0, currVal_1); }, null); }
function View_NgSelectComponent_22(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵvid */ "sc"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵeld */ "Ub"](0, 0, null, null, 1, "div", [["class", "ng-option ng-option-disabled"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵted */ "qc"](1, null, ["", ""]))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.typeToSearchText; _ck(_v, 1, 0, currVal_0); }); }
function View_NgSelectComponent_23(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵvid */ "sc"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵand */ "Lb"](0, null, null, 0))], null, null); }
function View_NgSelectComponent_21(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵvid */ "sc"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵeld */ "Ub"](0, 0, null, null, 3, null, null, null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵand */ "Lb"](0, [["defaultTypeToSearchTemplate", 2]], null, 0, null, View_NgSelectComponent_22)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵand */ "Lb"](16777216, null, null, 1, null, View_NgSelectComponent_23)), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵdid */ "Tb"](3, 540672, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__[/* NgTemplateOutlet */ "r"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ViewContainerRef */ "nb"]], { ngTemplateOutlet: [0, "ngTemplateOutlet"] }, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵand */ "Lb"](0, null, null, 0))], function (_ck, _v) { var _co = _v.component; var currVal_0 = (_co.typeToSearchTemplate || _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵnov */ "hc"](_v, 1)); _ck(_v, 3, 0, currVal_0); }, null); }
function View_NgSelectComponent_25(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵvid */ "sc"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵeld */ "Ub"](0, 0, null, null, 1, "div", [["class", "ng-option ng-option-disabled"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵted */ "qc"](1, null, ["", ""]))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.loadingText; _ck(_v, 1, 0, currVal_0); }); }
function View_NgSelectComponent_26(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵvid */ "sc"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵand */ "Lb"](0, null, null, 0))], null, null); }
function View_NgSelectComponent_24(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵvid */ "sc"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵeld */ "Ub"](0, 0, null, null, 4, null, null, null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵand */ "Lb"](0, [["defaultLoadingTextTemplate", 2]], null, 0, null, View_NgSelectComponent_25)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵand */ "Lb"](16777216, null, null, 2, null, View_NgSelectComponent_26)), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵdid */ "Tb"](3, 540672, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__[/* NgTemplateOutlet */ "r"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ViewContainerRef */ "nb"]], { ngTemplateOutletContext: [0, "ngTemplateOutletContext"], ngTemplateOutlet: [1, "ngTemplateOutlet"] }, null), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵpod */ "kc"](4, { searchTerm: 0 }), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵand */ "Lb"](0, null, null, 0))], function (_ck, _v) { var _co = _v.component; var currVal_0 = _ck(_v, 4, 0, _co.searchTerm); var currVal_1 = (_co.loadingTextTemplate || _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵnov */ "hc"](_v, 1)); _ck(_v, 3, 0, currVal_0, currVal_1); }, null); }
function View_NgSelectComponent_11(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵvid */ "sc"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵeld */ "Ub"](0, 0, null, null, 14, "ng-dropdown-panel", [["class", "ng-dropdown-panel"]], [[2, "ng-select-multiple", null], [8, "id", 0]], [[null, "update"], [null, "scroll"], [null, "scrollToEnd"], [null, "outsideClick"], [null, "mousedown"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if (("mousedown" === en)) {
        var pd_0 = (_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵnov */ "hc"](_v, 3).handleMousedown($event) !== false);
        ad = (pd_0 && ad);
    } if (("update" === en)) {
        var pd_1 = ((_co.viewPortItems = $event) !== false);
        ad = (pd_1 && ad);
    } if (("scroll" === en)) {
        var pd_2 = (_co.scroll.emit($event) !== false);
        ad = (pd_2 && ad);
    } if (("scrollToEnd" === en)) {
        var pd_3 = (_co.scrollToEnd.emit($event) !== false);
        ad = (pd_3 && ad);
    } if (("outsideClick" === en)) {
        var pd_4 = (_co.close() !== false);
        ad = (pd_4 && ad);
    } return ad; }, View_ɵq_0, RenderType_ɵq)), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵprd */ "mc"](512, null, _angular_common__WEBPACK_IMPORTED_MODULE_2__[/* ɵNgClassImpl */ "y"], _angular_common__WEBPACK_IMPORTED_MODULE_2__[/* ɵNgClassR2Impl */ "z"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* IterableDiffers */ "F"], _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* KeyValueDiffers */ "G"], _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ElementRef */ "u"], _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* Renderer2 */ "Y"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵdid */ "Tb"](2, 278528, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__[/* NgClass */ "j"], [_angular_common__WEBPACK_IMPORTED_MODULE_2__[/* ɵNgClassImpl */ "y"]], { klass: [0, "klass"], ngClass: [1, "ngClass"] }, null), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵdid */ "Tb"](3, 770048, [[1, 4]], 0, _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_1__[/* ɵq */ "h"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* Renderer2 */ "Y"], _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* NgZone */ "P"], _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_1__[/* ɵd */ "f"], _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ElementRef */ "u"], [2, _angular_common__WEBPACK_IMPORTED_MODULE_2__[/* DOCUMENT */ "d"]]], { items: [0, "items"], markedItem: [1, "markedItem"], position: [2, "position"], appendTo: [3, "appendTo"], bufferAmount: [4, "bufferAmount"], virtualScroll: [5, "virtualScroll"], headerTemplate: [6, "headerTemplate"], footerTemplate: [7, "footerTemplate"], filterValue: [8, "filterValue"] }, { update: "update", scroll: "scroll", scrollToEnd: "scrollToEnd", outsideClick: "outsideClick" }), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵeld */ "Ub"](4, 0, null, 0, 4, null, null, null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵand */ "Lb"](16777216, null, null, 1, null, View_NgSelectComponent_12)), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵdid */ "Tb"](6, 278528, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__[/* NgForOf */ "k"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ViewContainerRef */ "nb"], _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* TemplateRef */ "ib"], _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* IterableDiffers */ "F"]], { ngForOf: [0, "ngForOf"], ngForTrackBy: [1, "ngForTrackBy"] }, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵand */ "Lb"](16777216, null, null, 1, null, View_NgSelectComponent_15)), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵdid */ "Tb"](8, 16384, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__[/* NgIf */ "l"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ViewContainerRef */ "nb"], _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* TemplateRef */ "ib"]], { ngIf: [0, "ngIf"] }, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵand */ "Lb"](16777216, null, 0, 1, null, View_NgSelectComponent_18)), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵdid */ "Tb"](10, 16384, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__[/* NgIf */ "l"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ViewContainerRef */ "nb"], _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* TemplateRef */ "ib"]], { ngIf: [0, "ngIf"] }, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵand */ "Lb"](16777216, null, 0, 1, null, View_NgSelectComponent_21)), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵdid */ "Tb"](12, 16384, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__[/* NgIf */ "l"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ViewContainerRef */ "nb"], _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* TemplateRef */ "ib"]], { ngIf: [0, "ngIf"] }, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵand */ "Lb"](16777216, null, 0, 1, null, View_NgSelectComponent_24)), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵdid */ "Tb"](14, 16384, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__[/* NgIf */ "l"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ViewContainerRef */ "nb"], _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* TemplateRef */ "ib"]], { ngIf: [0, "ngIf"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_2 = "ng-dropdown-panel"; var currVal_3 = (_co.appendTo ? _co.classes : null); _ck(_v, 2, 0, currVal_2, currVal_3); var currVal_4 = _co.itemsList.filteredItems; var currVal_5 = _co.itemsList.markedItem; var currVal_6 = _co.dropdownPosition; var currVal_7 = _co.appendTo; var currVal_8 = _co.bufferAmount; var currVal_9 = _co.virtualScroll; var currVal_10 = _co.headerTemplate; var currVal_11 = _co.footerTemplate; var currVal_12 = _co.searchTerm; _ck(_v, 3, 0, currVal_4, currVal_5, currVal_6, currVal_7, currVal_8, currVal_9, currVal_10, currVal_11, currVal_12); var currVal_13 = _co.viewPortItems; var currVal_14 = _co.trackByOption; _ck(_v, 6, 0, currVal_13, currVal_14); var currVal_15 = _co.showAddTag; _ck(_v, 8, 0, currVal_15); var currVal_16 = _co.showNoItemsFound(); _ck(_v, 10, 0, currVal_16); var currVal_17 = _co.showTypeToSearch(); _ck(_v, 12, 0, currVal_17); var currVal_18 = (_co.loading && (_co.itemsList.filteredItems.length === 0)); _ck(_v, 14, 0, currVal_18); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.multiple; var currVal_1 = _co.dropdownId; _ck(_v, 0, 0, currVal_0, currVal_1); }); }
function View_NgSelectComponent_0(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵvid */ "sc"](2, [_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵqud */ "nc"](671088640, 1, { dropdownPanel: 0 }), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵqud */ "nc"](402653184, 2, { searchInput: 0 }), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵeld */ "Ub"](2, 0, null, null, 15, "div", [], [[2, "ng-has-value", null], [8, "className", 0]], [[null, "mousedown"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if (("mousedown" === en)) {
        var pd_0 = (_co.handleMousedown($event) !== false);
        ad = (pd_0 && ad);
    } return ad; }, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵeld */ "Ub"](3, 0, null, null, 8, "div", [["class", "ng-value-container"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵeld */ "Ub"](4, 0, null, null, 1, "div", [["class", "ng-placeholder"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵted */ "qc"](5, null, ["", ""])), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵand */ "Lb"](16777216, null, null, 1, null, View_NgSelectComponent_1)), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵdid */ "Tb"](7, 16384, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__[/* NgIf */ "l"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ViewContainerRef */ "nb"], _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* TemplateRef */ "ib"]], { ngIf: [0, "ngIf"] }, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵand */ "Lb"](16777216, null, null, 1, null, View_NgSelectComponent_5)), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵdid */ "Tb"](9, 16384, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__[/* NgIf */ "l"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ViewContainerRef */ "nb"], _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* TemplateRef */ "ib"]], { ngIf: [0, "ngIf"] }, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵeld */ "Ub"](10, 0, null, null, 1, "div", [["class", "ng-input"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵeld */ "Ub"](11, 0, [[2, 0], ["searchInput", 1]], null, 0, "input", [["role", "combobox"]], [[1, "id", 0], [1, "tabindex", 0], [8, "readOnly", 0], [8, "disabled", 0], [8, "value", 0], [1, "aria-expanded", 0], [1, "aria-owns", 0], [1, "aria-activedescendant", 0]], [[null, "input"], [null, "compositionstart"], [null, "compositionend"], [null, "focus"], [null, "blur"], [null, "change"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if (("input" === en)) {
        var pd_0 = (_co.filter(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵnov */ "hc"](_v, 11).value) !== false);
        ad = (pd_0 && ad);
    } if (("compositionstart" === en)) {
        var pd_1 = (_co.onCompositionStart() !== false);
        ad = (pd_1 && ad);
    } if (("compositionend" === en)) {
        var pd_2 = (_co.onCompositionEnd(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵnov */ "hc"](_v, 11).value) !== false);
        ad = (pd_2 && ad);
    } if (("focus" === en)) {
        var pd_3 = (_co.onInputFocus($event) !== false);
        ad = (pd_3 && ad);
    } if (("blur" === en)) {
        var pd_4 = (_co.onInputBlur($event) !== false);
        ad = (pd_4 && ad);
    } if (("change" === en)) {
        var pd_5 = ($event.stopPropagation() !== false);
        ad = (pd_5 && ad);
    } return ad; }, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵand */ "Lb"](16777216, null, null, 1, null, View_NgSelectComponent_7)), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵdid */ "Tb"](13, 16384, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__[/* NgIf */ "l"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ViewContainerRef */ "nb"], _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* TemplateRef */ "ib"]], { ngIf: [0, "ngIf"] }, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵand */ "Lb"](16777216, null, null, 1, null, View_NgSelectComponent_10)), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵdid */ "Tb"](15, 16384, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__[/* NgIf */ "l"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ViewContainerRef */ "nb"], _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* TemplateRef */ "ib"]], { ngIf: [0, "ngIf"] }, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵeld */ "Ub"](16, 0, null, null, 1, "span", [["class", "ng-arrow-wrapper"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵeld */ "Ub"](17, 0, null, null, 0, "span", [["class", "ng-arrow"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵand */ "Lb"](16777216, null, null, 1, null, View_NgSelectComponent_11)), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵdid */ "Tb"](19, 16384, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__[/* NgIf */ "l"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ViewContainerRef */ "nb"], _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* TemplateRef */ "ib"]], { ngIf: [0, "ngIf"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_3 = (!_co.multiLabelTemplate && (_co.selectedItems.length > 0)); _ck(_v, 7, 0, currVal_3); var currVal_4 = (_co.multiLabelTemplate && (_co.selectedValues.length > 0)); _ck(_v, 9, 0, currVal_4); var currVal_13 = _co.loading; _ck(_v, 13, 0, currVal_13); var currVal_14 = _co.showClear(); _ck(_v, 15, 0, currVal_14); var currVal_15 = _co.isOpen; _ck(_v, 19, 0, currVal_15); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.hasValue; var currVal_1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵinlineInterpolate */ "Yb"](1, "ng-select-container ng-appearance-", _co.appearance, ""); _ck(_v, 2, 0, currVal_0, currVal_1); var currVal_2 = _co.placeholder; _ck(_v, 5, 0, currVal_2); var currVal_5 = _co.labelForId; var currVal_6 = _co.tabIndex; var currVal_7 = (!_co.searchable || _co.itemsList.maxItemsSelected); var currVal_8 = _co.disabled; var currVal_9 = (_co.searchTerm ? _co.searchTerm : ""); var currVal_10 = _co.isOpen; var currVal_11 = (_co.isOpen ? _co.dropdownId : null); var currVal_12 = (_co.isOpen ? ((_co.itemsList == null) ? null : ((_co.itemsList.markedItem == null) ? null : _co.itemsList.markedItem.htmlId)) : null); _ck(_v, 11, 0, currVal_5, currVal_6, currVal_7, currVal_8, currVal_9, currVal_10, currVal_11, currVal_12); }); }
function View_NgSelectComponent_Host_0(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵvid */ "sc"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵeld */ "Ub"](0, 0, null, null, 15, "ng-select", [["class", "ng-select"], ["role", "listbox"]], [[2, "ng-select-single", null], [2, "ng-select-typeahead", null], [2, "ng-select-multiple", null], [2, "ng-select-taggable", null], [2, "ng-select-searchable", null], [2, "ng-select-clearable", null], [2, "ng-select-opened", null], [2, "ng-select-disabled", null], [2, "ng-select-filtered", null]], [[null, "keydown"]], function (_v, en, $event) { var ad = true; if (("keydown" === en)) {
        var pd_0 = (_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵnov */ "hc"](_v, 3).handleKeyDown($event) !== false);
        ad = (pd_0 && ad);
    } return ad; }, View_NgSelectComponent_0, RenderType_NgSelectComponent)), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵprd */ "mc"](5120, null, _angular_forms__WEBPACK_IMPORTED_MODULE_3__[/* NG_VALUE_ACCESSOR */ "n"], function (p0_0) { return [p0_0]; }, [_ng_select_ng_select__WEBPACK_IMPORTED_MODULE_1__[/* NgSelectComponent */ "a"]]), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵprd */ "mc"](4608, null, _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_1__[/* ɵd */ "f"], _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_1__[/* ɵd */ "f"], []), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵdid */ "Tb"](3, 4964352, null, 12, _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_1__[/* NgSelectComponent */ "a"], [[8, null], [8, null], _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_1__[/* NgSelectConfig */ "b"], _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_1__[/* SELECTION_MODEL_FACTORY */ "d"], _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ElementRef */ "u"], _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ChangeDetectorRef */ "k"], _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_1__[/* ɵs */ "j"]], null, null), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵqud */ "nc"](603979776, 1, { optionTemplate: 0 }), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵqud */ "nc"](603979776, 2, { optgroupTemplate: 0 }), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵqud */ "nc"](603979776, 3, { labelTemplate: 0 }), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵqud */ "nc"](603979776, 4, { multiLabelTemplate: 0 }), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵqud */ "nc"](603979776, 5, { headerTemplate: 0 }), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵqud */ "nc"](603979776, 6, { footerTemplate: 0 }), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵqud */ "nc"](603979776, 7, { notFoundTemplate: 0 }), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵqud */ "nc"](603979776, 8, { typeToSearchTemplate: 0 }), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵqud */ "nc"](603979776, 9, { loadingTextTemplate: 0 }), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵqud */ "nc"](603979776, 10, { tagTemplate: 0 }), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵqud */ "nc"](603979776, 11, { loadingSpinnerTemplate: 0 }), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵqud */ "nc"](603979776, 12, { ngOptions: 1 })], function (_ck, _v) { _ck(_v, 3, 0); }, function (_ck, _v) { var currVal_0 = !_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵnov */ "hc"](_v, 3).multiple; var currVal_1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵnov */ "hc"](_v, 3).typeahead; var currVal_2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵnov */ "hc"](_v, 3).multiple; var currVal_3 = _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵnov */ "hc"](_v, 3).addTag; var currVal_4 = _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵnov */ "hc"](_v, 3).searchable; var currVal_5 = _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵnov */ "hc"](_v, 3).clearable; var currVal_6 = _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵnov */ "hc"](_v, 3).isOpen; var currVal_7 = _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵnov */ "hc"](_v, 3).disabled; var currVal_8 = _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵnov */ "hc"](_v, 3).filtered; _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7, currVal_8); }); }
var NgSelectComponentNgFactory = _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵccf */ "Qb"]("ng-select", _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_1__[/* NgSelectComponent */ "a"], View_NgSelectComponent_Host_0, { bindLabel: "bindLabel", bindValue: "bindValue", markFirst: "markFirst", placeholder: "placeholder", notFoundText: "notFoundText", typeToSearchText: "typeToSearchText", addTagText: "addTagText", loadingText: "loadingText", clearAllText: "clearAllText", appearance: "appearance", dropdownPosition: "dropdownPosition", appendTo: "appendTo", loading: "loading", closeOnSelect: "closeOnSelect", hideSelected: "hideSelected", selectOnTab: "selectOnTab", openOnEnter: "openOnEnter", maxSelectedItems: "maxSelectedItems", groupBy: "groupBy", groupValue: "groupValue", bufferAmount: "bufferAmount", virtualScroll: "virtualScroll", selectableGroup: "selectableGroup", selectableGroupAsModel: "selectableGroupAsModel", searchFn: "searchFn", trackByFn: "trackByFn", clearOnBackspace: "clearOnBackspace", labelForId: "labelForId", inputAttrs: "inputAttrs", tabIndex: "tabIndex", readonly: "readonly", searchWhileComposing: "searchWhileComposing", minTermLength: "minTermLength", keyDownFn: "keyDownFn", typeahead: "typeahead", multiple: "multiple", addTag: "addTag", searchable: "searchable", clearable: "clearable", isOpen: "isOpen", items: "items", compareWith: "compareWith", clearSearchOnAdd: "clearSearchOnAdd" }, { blurEvent: "blur", focusEvent: "focus", changeEvent: "change", openEvent: "open", closeEvent: "close", searchEvent: "search", clearEvent: "clear", addEvent: "add", removeEvent: "remove", scroll: "scroll", scrollToEnd: "scrollToEnd" }, []);

var styles_ɵq = [];
var RenderType_ɵq = _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵcrt */ "Sb"]({ encapsulation: 2, styles: styles_ɵq, data: {} });

function View_ɵq_1(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵvid */ "sc"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵeld */ "Ub"](0, 0, null, null, 3, "div", [["class", "ng-dropdown-header"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵeld */ "Ub"](1, 16777216, null, null, 2, null, null, null, null, null, null, null)), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵdid */ "Tb"](2, 540672, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__[/* NgTemplateOutlet */ "r"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ViewContainerRef */ "nb"]], { ngTemplateOutletContext: [0, "ngTemplateOutletContext"], ngTemplateOutlet: [1, "ngTemplateOutlet"] }, null), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵpod */ "kc"](3, { searchTerm: 0 })], function (_ck, _v) { var _co = _v.component; var currVal_0 = _ck(_v, 3, 0, _co.filterValue); var currVal_1 = _co.headerTemplate; _ck(_v, 2, 0, currVal_0, currVal_1); }, null); }
function View_ɵq_2(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵvid */ "sc"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵeld */ "Ub"](0, 0, null, null, 3, "div", [["class", "ng-dropdown-footer"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵeld */ "Ub"](1, 16777216, null, null, 2, null, null, null, null, null, null, null)), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵdid */ "Tb"](2, 540672, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__[/* NgTemplateOutlet */ "r"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ViewContainerRef */ "nb"]], { ngTemplateOutletContext: [0, "ngTemplateOutletContext"], ngTemplateOutlet: [1, "ngTemplateOutlet"] }, null), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵpod */ "kc"](3, { searchTerm: 0 })], function (_ck, _v) { var _co = _v.component; var currVal_0 = _ck(_v, 3, 0, _co.filterValue); var currVal_1 = _co.footerTemplate; _ck(_v, 2, 0, currVal_0, currVal_1); }, null); }
function View_ɵq_0(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵvid */ "sc"](2, [_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵqud */ "nc"](402653184, 1, { contentElementRef: 0 }), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵqud */ "nc"](402653184, 2, { scrollElementRef: 0 }), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵqud */ "nc"](402653184, 3, { paddingElementRef: 0 }), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵand */ "Lb"](16777216, null, null, 1, null, View_ɵq_1)), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵdid */ "Tb"](4, 16384, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__[/* NgIf */ "l"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ViewContainerRef */ "nb"], _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* TemplateRef */ "ib"]], { ngIf: [0, "ngIf"] }, null), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵeld */ "Ub"](5, 0, [[2, 0], ["scroll", 1]], null, 3, "div", [["class", "ng-dropdown-panel-items scroll-host"]], null, null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵeld */ "Ub"](6, 0, [[3, 0], ["padding", 1]], null, 0, "div", [], [[2, "total-padding", null]], null, null, null, null)), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵeld */ "Ub"](7, 0, [[1, 0], ["content", 1]], null, 1, "div", [], [[2, "scrollable-content", null]], null, null, null, null)), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵncd */ "gc"](null, 0), (_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵand */ "Lb"](16777216, null, null, 1, null, View_ɵq_2)), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵdid */ "Tb"](10, 16384, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__[/* NgIf */ "l"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ViewContainerRef */ "nb"], _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* TemplateRef */ "ib"]], { ngIf: [0, "ngIf"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.headerTemplate; _ck(_v, 4, 0, currVal_0); var currVal_3 = _co.footerTemplate; _ck(_v, 10, 0, currVal_3); }, function (_ck, _v) { var _co = _v.component; var currVal_1 = _co.virtualScroll; _ck(_v, 6, 0, currVal_1); var currVal_2 = (_co.virtualScroll && _co.items.length); _ck(_v, 7, 0, currVal_2); }); }
function View_ɵq_Host_0(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵvid */ "sc"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵeld */ "Ub"](0, 0, null, null, 1, "ng-dropdown-panel", [], null, [[null, "mousedown"]], function (_v, en, $event) { var ad = true; if (("mousedown" === en)) {
        var pd_0 = (_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵnov */ "hc"](_v, 1).handleMousedown($event) !== false);
        ad = (pd_0 && ad);
    } return ad; }, View_ɵq_0, RenderType_ɵq)), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵdid */ "Tb"](1, 770048, null, 0, _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_1__[/* ɵq */ "h"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* Renderer2 */ "Y"], _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* NgZone */ "P"], _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_1__[/* ɵd */ "f"], _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ElementRef */ "u"], [2, _angular_common__WEBPACK_IMPORTED_MODULE_2__[/* DOCUMENT */ "d"]]], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }
var ɵqNgFactory = _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵccf */ "Qb"]("ng-dropdown-panel", _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_1__[/* ɵq */ "h"], View_ɵq_Host_0, { items: "items", markedItem: "markedItem", position: "position", appendTo: "appendTo", bufferAmount: "bufferAmount", virtualScroll: "virtualScroll", headerTemplate: "headerTemplate", footerTemplate: "footerTemplate", filterValue: "filterValue" }, { update: "update", scroll: "scroll", scrollToEnd: "scrollToEnd", outsideClick: "outsideClick" }, ["*"]);

var styles_ɵr = [];
var RenderType_ɵr = _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵcrt */ "Sb"]({ encapsulation: 2, styles: styles_ɵr, data: {} });

function View_ɵr_0(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵvid */ "sc"](2, [_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵncd */ "gc"](null, 0)], null, null); }
function View_ɵr_Host_0(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵvid */ "sc"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵeld */ "Ub"](0, 0, null, null, 1, "ng-option", [], null, null, null, View_ɵr_0, RenderType_ɵr)), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵdid */ "Tb"](1, 9093120, null, 0, _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_1__[/* ɵr */ "i"], [_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ElementRef */ "u"]], null, null)], null, null); }
var ɵrNgFactory = _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵccf */ "Qb"]("ng-option", _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_1__[/* ɵr */ "i"], View_ɵr_Host_0, { value: "value", disabled: "disabled" }, {}, ["*"]);



/***/ }),

/***/ "wTG2":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: ./node_modules/@angular/core/fesm2015/core.js
var core = __webpack_require__("8Y7J");

// EXTERNAL MODULE: ./node_modules/@angular/forms/fesm2015/forms.js + 1 modules
var fesm2015_forms = __webpack_require__("s7LF");

// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/operators/takeUntil.js
var takeUntil = __webpack_require__("1G5W");

// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/scheduler/async.js
var scheduler_async = __webpack_require__("D0XW");

// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/OuterSubscriber.js
var OuterSubscriber = __webpack_require__("l7GE");

// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/util/subscribeToResult.js
var subscribeToResult = __webpack_require__("ZUHj");

// CONCATENATED MODULE: ./node_modules/rxjs/_esm2015/internal/operators/audit.js


function audit(durationSelector) {
    return function auditOperatorFunction(source) {
        return source.lift(new AuditOperator(durationSelector));
    };
}
class AuditOperator {
    constructor(durationSelector) {
        this.durationSelector = durationSelector;
    }
    call(subscriber, source) {
        return source.subscribe(new audit_AuditSubscriber(subscriber, this.durationSelector));
    }
}
class audit_AuditSubscriber extends OuterSubscriber["a" /* OuterSubscriber */] {
    constructor(destination, durationSelector) {
        super(destination);
        this.durationSelector = durationSelector;
        this.hasValue = false;
    }
    _next(value) {
        this.value = value;
        this.hasValue = true;
        if (!this.throttled) {
            let duration;
            try {
                const { durationSelector } = this;
                duration = durationSelector(value);
            }
            catch (err) {
                return this.destination.error(err);
            }
            const innerSubscription = Object(subscribeToResult["a" /* subscribeToResult */])(this, duration);
            if (!innerSubscription || innerSubscription.closed) {
                this.clearThrottle();
            }
            else {
                this.add(this.throttled = innerSubscription);
            }
        }
    }
    clearThrottle() {
        const { value, hasValue, throttled } = this;
        if (throttled) {
            this.remove(throttled);
            this.throttled = null;
            throttled.unsubscribe();
        }
        if (hasValue) {
            this.value = null;
            this.hasValue = false;
            this.destination.next(value);
        }
    }
    notifyNext(outerValue, innerValue, outerIndex, innerIndex) {
        this.clearThrottle();
    }
    notifyComplete() {
        this.clearThrottle();
    }
}
//# sourceMappingURL=audit.js.map
// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/observable/timer.js + 1 modules
var timer = __webpack_require__("PqYM");

// CONCATENATED MODULE: ./node_modules/rxjs/_esm2015/internal/operators/auditTime.js



function auditTime(duration, scheduler = scheduler_async["a" /* async */]) {
    return audit(() => Object(timer["a" /* timer */])(duration, scheduler));
}
//# sourceMappingURL=auditTime.js.map
// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/operators/startWith.js + 1 modules
var startWith = __webpack_require__("JX91");

// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/operators/tap.js
var tap = __webpack_require__("vkgz");

// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/operators/debounceTime.js
var debounceTime = __webpack_require__("Kj3r");

// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/operators/filter.js
var filter = __webpack_require__("pLZG");

// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/operators/map.js
var map = __webpack_require__("lJxs");

// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/scheduler/animationFrame.js + 2 modules
var animationFrame = __webpack_require__("eNwd");

// CONCATENATED MODULE: ./node_modules/rxjs/_esm2015/internal/util/Immediate.js
let nextHandle = 1;
const tasksByHandle = {};
function runIfPresent(handle) {
    const cb = tasksByHandle[handle];
    if (cb) {
        cb();
    }
}
const Immediate = {
    setImmediate(cb) {
        const handle = nextHandle++;
        tasksByHandle[handle] = cb;
        Promise.resolve().then(() => runIfPresent(handle));
        return handle;
    },
    clearImmediate(handle) {
        delete tasksByHandle[handle];
    },
};
//# sourceMappingURL=Immediate.js.map
// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/scheduler/AsyncAction.js + 1 modules
var AsyncAction = __webpack_require__("3N8a");

// CONCATENATED MODULE: ./node_modules/rxjs/_esm2015/internal/scheduler/AsapAction.js


class AsapAction_AsapAction extends AsyncAction["a" /* AsyncAction */] {
    constructor(scheduler, work) {
        super(scheduler, work);
        this.scheduler = scheduler;
        this.work = work;
    }
    requestAsyncId(scheduler, id, delay = 0) {
        if (delay !== null && delay > 0) {
            return super.requestAsyncId(scheduler, id, delay);
        }
        scheduler.actions.push(this);
        return scheduler.scheduled || (scheduler.scheduled = Immediate.setImmediate(scheduler.flush.bind(scheduler, null)));
    }
    recycleAsyncId(scheduler, id, delay = 0) {
        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {
            return super.recycleAsyncId(scheduler, id, delay);
        }
        if (scheduler.actions.length === 0) {
            Immediate.clearImmediate(id);
            scheduler.scheduled = undefined;
        }
        return undefined;
    }
}
//# sourceMappingURL=AsapAction.js.map
// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/scheduler/AsyncScheduler.js + 1 modules
var AsyncScheduler = __webpack_require__("IjjT");

// CONCATENATED MODULE: ./node_modules/rxjs/_esm2015/internal/scheduler/AsapScheduler.js

class AsapScheduler_AsapScheduler extends AsyncScheduler["a" /* AsyncScheduler */] {
    flush(action) {
        this.active = true;
        this.scheduled = undefined;
        const { actions } = this;
        let error;
        let index = -1;
        let count = actions.length;
        action = action || actions.shift();
        do {
            if (error = action.execute(action.state, action.delay)) {
                break;
            }
        } while (++index < count && (action = actions.shift()));
        this.active = false;
        if (error) {
            while (++index < count && (action = actions.shift())) {
                action.unsubscribe();
            }
            throw error;
        }
    }
}
//# sourceMappingURL=AsapScheduler.js.map
// CONCATENATED MODULE: ./node_modules/rxjs/_esm2015/internal/scheduler/asap.js


const asap = new AsapScheduler_AsapScheduler(AsapAction_AsapAction);
//# sourceMappingURL=asap.js.map
// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/Subject.js
var Subject = __webpack_require__("XNiG");

// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/observable/fromEvent.js
var fromEvent = __webpack_require__("xgIS");

// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/observable/merge.js
var merge = __webpack_require__("VRyK");

// EXTERNAL MODULE: ./node_modules/@angular/common/fesm2015/common.js
var common = __webpack_require__("SVse");

// CONCATENATED MODULE: ./node_modules/@ng-select/ng-select/fesm2015/ng-select-ng-select.js
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ng_select_ng_select_NgSelectComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return NgSelectConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return NgSelectModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return SELECTION_MODEL_FACTORY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return DefaultSelectionModelFactory; });
/* unused harmony export ɵc */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return NgDropdownPanelService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return NgItemLabelDirective; });
/* unused harmony export ɵf */
/* unused harmony export ɵg */
/* unused harmony export ɵh */
/* unused harmony export ɵi */
/* unused harmony export ɵj */
/* unused harmony export ɵk */
/* unused harmony export ɵl */
/* unused harmony export ɵm */
/* unused harmony export ɵn */
/* unused harmony export ɵo */
/* unused harmony export ɵp */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return ng_select_ng_select_NgDropdownPanelComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "i", function() { return ng_select_ng_select_NgOptionComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "j", function() { return ConsoleService; });






/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
const unescapedHTMLExp = /[&<>"']/g;
/** @type {?} */
const hasUnescapedHTMLExp = RegExp(unescapedHTMLExp.source);
/** @type {?} */
const htmlEscapes = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    '\'': '&#39;'
};
/**
 * @param {?} string
 * @return {?}
 */
function escapeHTML(string) {
    return (string && hasUnescapedHTMLExp.test(string)) ?
        string.replace(unescapedHTMLExp, (/**
         * @param {?} chr
         * @return {?}
         */
        chr => htmlEscapes[chr])) :
        string;
}
/**
 * @param {?} value
 * @return {?}
 */
function isDefined(value) {
    return value !== undefined && value !== null;
}
/**
 * @param {?} value
 * @return {?}
 */
function isObject(value) {
    return typeof value === 'object' && isDefined(value);
}
/**
 * @param {?} value
 * @return {?}
 */
function isPromise(value) {
    return value instanceof Promise;
}
/**
 * @param {?} value
 * @return {?}
 */
function isFunction(value) {
    return value instanceof Function;
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgItemLabelDirective {
    /**
     * @param {?} element
     */
    constructor(element) {
        this.element = element;
        this.escape = true;
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    ngOnChanges(changes) {
        this.element.nativeElement.innerHTML = this.escape ?
            escapeHTML(this.ngItemLabel) :
            this.ngItemLabel;
    }
}
NgItemLabelDirective.decorators = [
    { type: core["t" /* Directive */], args: [{ selector: '[ngItemLabel]' },] }
];
/** @nocollapse */
NgItemLabelDirective.ctorParameters = () => [
    { type: core["u" /* ElementRef */] }
];
NgItemLabelDirective.propDecorators = {
    ngItemLabel: [{ type: core["E" /* Input */] }],
    escape: [{ type: core["E" /* Input */] }]
};
if (false) {}
class NgOptionTemplateDirective {
    /**
     * @param {?} template
     */
    constructor(template) {
        this.template = template;
    }
}
NgOptionTemplateDirective.decorators = [
    { type: core["t" /* Directive */], args: [{ selector: '[ng-option-tmp]' },] }
];
/** @nocollapse */
NgOptionTemplateDirective.ctorParameters = () => [
    { type: core["ib" /* TemplateRef */] }
];
if (false) {}
class NgOptgroupTemplateDirective {
    /**
     * @param {?} template
     */
    constructor(template) {
        this.template = template;
    }
}
NgOptgroupTemplateDirective.decorators = [
    { type: core["t" /* Directive */], args: [{ selector: '[ng-optgroup-tmp]' },] }
];
/** @nocollapse */
NgOptgroupTemplateDirective.ctorParameters = () => [
    { type: core["ib" /* TemplateRef */] }
];
if (false) {}
class NgLabelTemplateDirective {
    /**
     * @param {?} template
     */
    constructor(template) {
        this.template = template;
    }
}
NgLabelTemplateDirective.decorators = [
    { type: core["t" /* Directive */], args: [{ selector: '[ng-label-tmp]' },] }
];
/** @nocollapse */
NgLabelTemplateDirective.ctorParameters = () => [
    { type: core["ib" /* TemplateRef */] }
];
if (false) {}
class NgMultiLabelTemplateDirective {
    /**
     * @param {?} template
     */
    constructor(template) {
        this.template = template;
    }
}
NgMultiLabelTemplateDirective.decorators = [
    { type: core["t" /* Directive */], args: [{ selector: '[ng-multi-label-tmp]' },] }
];
/** @nocollapse */
NgMultiLabelTemplateDirective.ctorParameters = () => [
    { type: core["ib" /* TemplateRef */] }
];
if (false) {}
class NgHeaderTemplateDirective {
    /**
     * @param {?} template
     */
    constructor(template) {
        this.template = template;
    }
}
NgHeaderTemplateDirective.decorators = [
    { type: core["t" /* Directive */], args: [{ selector: '[ng-header-tmp]' },] }
];
/** @nocollapse */
NgHeaderTemplateDirective.ctorParameters = () => [
    { type: core["ib" /* TemplateRef */] }
];
if (false) {}
class NgFooterTemplateDirective {
    /**
     * @param {?} template
     */
    constructor(template) {
        this.template = template;
    }
}
NgFooterTemplateDirective.decorators = [
    { type: core["t" /* Directive */], args: [{ selector: '[ng-footer-tmp]' },] }
];
/** @nocollapse */
NgFooterTemplateDirective.ctorParameters = () => [
    { type: core["ib" /* TemplateRef */] }
];
if (false) {}
class NgNotFoundTemplateDirective {
    /**
     * @param {?} template
     */
    constructor(template) {
        this.template = template;
    }
}
NgNotFoundTemplateDirective.decorators = [
    { type: core["t" /* Directive */], args: [{ selector: '[ng-notfound-tmp]' },] }
];
/** @nocollapse */
NgNotFoundTemplateDirective.ctorParameters = () => [
    { type: core["ib" /* TemplateRef */] }
];
if (false) {}
class NgTypeToSearchTemplateDirective {
    /**
     * @param {?} template
     */
    constructor(template) {
        this.template = template;
    }
}
NgTypeToSearchTemplateDirective.decorators = [
    { type: core["t" /* Directive */], args: [{ selector: '[ng-typetosearch-tmp]' },] }
];
/** @nocollapse */
NgTypeToSearchTemplateDirective.ctorParameters = () => [
    { type: core["ib" /* TemplateRef */] }
];
if (false) {}
class NgLoadingTextTemplateDirective {
    /**
     * @param {?} template
     */
    constructor(template) {
        this.template = template;
    }
}
NgLoadingTextTemplateDirective.decorators = [
    { type: core["t" /* Directive */], args: [{ selector: '[ng-loadingtext-tmp]' },] }
];
/** @nocollapse */
NgLoadingTextTemplateDirective.ctorParameters = () => [
    { type: core["ib" /* TemplateRef */] }
];
if (false) {}
class NgTagTemplateDirective {
    /**
     * @param {?} template
     */
    constructor(template) {
        this.template = template;
    }
}
NgTagTemplateDirective.decorators = [
    { type: core["t" /* Directive */], args: [{ selector: '[ng-tag-tmp]' },] }
];
/** @nocollapse */
NgTagTemplateDirective.ctorParameters = () => [
    { type: core["ib" /* TemplateRef */] }
];
if (false) {}
class NgLoadingSpinnerTemplateDirective {
    /**
     * @param {?} template
     */
    constructor(template) {
        this.template = template;
    }
}
NgLoadingSpinnerTemplateDirective.decorators = [
    { type: core["t" /* Directive */], args: [{ selector: '[ng-loadingspinner-tmp]' },] }
];
/** @nocollapse */
NgLoadingSpinnerTemplateDirective.ctorParameters = () => [
    { type: core["ib" /* TemplateRef */] }
];
if (false) {}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class ConsoleService {
    /**
     * @param {?} message
     * @return {?}
     */
    warn(message) {
        console.warn(message);
    }
}
ConsoleService.decorators = [
    { type: core["B" /* Injectable */], args: [{ providedIn: 'root' },] }
];
/** @nocollapse */ ConsoleService.ngInjectableDef = Object(core["wc" /* ɵɵdefineInjectable */])({ factory: function ConsoleService_Factory() { return new ConsoleService(); }, token: ConsoleService, providedIn: "root" });

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @return {?}
 */
function newId() {
    // First character is an 'a', it's good practice to tag id to begin with a letter
    return 'axxxxxxxxxxx'.replace(/[x]/g, (/**
     * @param {?} _
     * @return {?}
     */
    function (_) {
        // tslint:disable-next-line:no-bitwise
        /** @type {?} */
        const val = Math.random() * 16 | 0;
        return val.toString(16);
    }));
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
const diacritics = {
    '\u24B6': 'A',
    '\uFF21': 'A',
    '\u00C0': 'A',
    '\u00C1': 'A',
    '\u00C2': 'A',
    '\u1EA6': 'A',
    '\u1EA4': 'A',
    '\u1EAA': 'A',
    '\u1EA8': 'A',
    '\u00C3': 'A',
    '\u0100': 'A',
    '\u0102': 'A',
    '\u1EB0': 'A',
    '\u1EAE': 'A',
    '\u1EB4': 'A',
    '\u1EB2': 'A',
    '\u0226': 'A',
    '\u01E0': 'A',
    '\u00C4': 'A',
    '\u01DE': 'A',
    '\u1EA2': 'A',
    '\u00C5': 'A',
    '\u01FA': 'A',
    '\u01CD': 'A',
    '\u0200': 'A',
    '\u0202': 'A',
    '\u1EA0': 'A',
    '\u1EAC': 'A',
    '\u1EB6': 'A',
    '\u1E00': 'A',
    '\u0104': 'A',
    '\u023A': 'A',
    '\u2C6F': 'A',
    '\uA732': 'AA',
    '\u00C6': 'AE',
    '\u01FC': 'AE',
    '\u01E2': 'AE',
    '\uA734': 'AO',
    '\uA736': 'AU',
    '\uA738': 'AV',
    '\uA73A': 'AV',
    '\uA73C': 'AY',
    '\u24B7': 'B',
    '\uFF22': 'B',
    '\u1E02': 'B',
    '\u1E04': 'B',
    '\u1E06': 'B',
    '\u0243': 'B',
    '\u0182': 'B',
    '\u0181': 'B',
    '\u24B8': 'C',
    '\uFF23': 'C',
    '\u0106': 'C',
    '\u0108': 'C',
    '\u010A': 'C',
    '\u010C': 'C',
    '\u00C7': 'C',
    '\u1E08': 'C',
    '\u0187': 'C',
    '\u023B': 'C',
    '\uA73E': 'C',
    '\u24B9': 'D',
    '\uFF24': 'D',
    '\u1E0A': 'D',
    '\u010E': 'D',
    '\u1E0C': 'D',
    '\u1E10': 'D',
    '\u1E12': 'D',
    '\u1E0E': 'D',
    '\u0110': 'D',
    '\u018B': 'D',
    '\u018A': 'D',
    '\u0189': 'D',
    '\uA779': 'D',
    '\u01F1': 'DZ',
    '\u01C4': 'DZ',
    '\u01F2': 'Dz',
    '\u01C5': 'Dz',
    '\u24BA': 'E',
    '\uFF25': 'E',
    '\u00C8': 'E',
    '\u00C9': 'E',
    '\u00CA': 'E',
    '\u1EC0': 'E',
    '\u1EBE': 'E',
    '\u1EC4': 'E',
    '\u1EC2': 'E',
    '\u1EBC': 'E',
    '\u0112': 'E',
    '\u1E14': 'E',
    '\u1E16': 'E',
    '\u0114': 'E',
    '\u0116': 'E',
    '\u00CB': 'E',
    '\u1EBA': 'E',
    '\u011A': 'E',
    '\u0204': 'E',
    '\u0206': 'E',
    '\u1EB8': 'E',
    '\u1EC6': 'E',
    '\u0228': 'E',
    '\u1E1C': 'E',
    '\u0118': 'E',
    '\u1E18': 'E',
    '\u1E1A': 'E',
    '\u0190': 'E',
    '\u018E': 'E',
    '\u24BB': 'F',
    '\uFF26': 'F',
    '\u1E1E': 'F',
    '\u0191': 'F',
    '\uA77B': 'F',
    '\u24BC': 'G',
    '\uFF27': 'G',
    '\u01F4': 'G',
    '\u011C': 'G',
    '\u1E20': 'G',
    '\u011E': 'G',
    '\u0120': 'G',
    '\u01E6': 'G',
    '\u0122': 'G',
    '\u01E4': 'G',
    '\u0193': 'G',
    '\uA7A0': 'G',
    '\uA77D': 'G',
    '\uA77E': 'G',
    '\u24BD': 'H',
    '\uFF28': 'H',
    '\u0124': 'H',
    '\u1E22': 'H',
    '\u1E26': 'H',
    '\u021E': 'H',
    '\u1E24': 'H',
    '\u1E28': 'H',
    '\u1E2A': 'H',
    '\u0126': 'H',
    '\u2C67': 'H',
    '\u2C75': 'H',
    '\uA78D': 'H',
    '\u24BE': 'I',
    '\uFF29': 'I',
    '\u00CC': 'I',
    '\u00CD': 'I',
    '\u00CE': 'I',
    '\u0128': 'I',
    '\u012A': 'I',
    '\u012C': 'I',
    '\u0130': 'I',
    '\u00CF': 'I',
    '\u1E2E': 'I',
    '\u1EC8': 'I',
    '\u01CF': 'I',
    '\u0208': 'I',
    '\u020A': 'I',
    '\u1ECA': 'I',
    '\u012E': 'I',
    '\u1E2C': 'I',
    '\u0197': 'I',
    '\u24BF': 'J',
    '\uFF2A': 'J',
    '\u0134': 'J',
    '\u0248': 'J',
    '\u24C0': 'K',
    '\uFF2B': 'K',
    '\u1E30': 'K',
    '\u01E8': 'K',
    '\u1E32': 'K',
    '\u0136': 'K',
    '\u1E34': 'K',
    '\u0198': 'K',
    '\u2C69': 'K',
    '\uA740': 'K',
    '\uA742': 'K',
    '\uA744': 'K',
    '\uA7A2': 'K',
    '\u24C1': 'L',
    '\uFF2C': 'L',
    '\u013F': 'L',
    '\u0139': 'L',
    '\u013D': 'L',
    '\u1E36': 'L',
    '\u1E38': 'L',
    '\u013B': 'L',
    '\u1E3C': 'L',
    '\u1E3A': 'L',
    '\u0141': 'L',
    '\u023D': 'L',
    '\u2C62': 'L',
    '\u2C60': 'L',
    '\uA748': 'L',
    '\uA746': 'L',
    '\uA780': 'L',
    '\u01C7': 'LJ',
    '\u01C8': 'Lj',
    '\u24C2': 'M',
    '\uFF2D': 'M',
    '\u1E3E': 'M',
    '\u1E40': 'M',
    '\u1E42': 'M',
    '\u2C6E': 'M',
    '\u019C': 'M',
    '\u24C3': 'N',
    '\uFF2E': 'N',
    '\u01F8': 'N',
    '\u0143': 'N',
    '\u00D1': 'N',
    '\u1E44': 'N',
    '\u0147': 'N',
    '\u1E46': 'N',
    '\u0145': 'N',
    '\u1E4A': 'N',
    '\u1E48': 'N',
    '\u0220': 'N',
    '\u019D': 'N',
    '\uA790': 'N',
    '\uA7A4': 'N',
    '\u01CA': 'NJ',
    '\u01CB': 'Nj',
    '\u24C4': 'O',
    '\uFF2F': 'O',
    '\u00D2': 'O',
    '\u00D3': 'O',
    '\u00D4': 'O',
    '\u1ED2': 'O',
    '\u1ED0': 'O',
    '\u1ED6': 'O',
    '\u1ED4': 'O',
    '\u00D5': 'O',
    '\u1E4C': 'O',
    '\u022C': 'O',
    '\u1E4E': 'O',
    '\u014C': 'O',
    '\u1E50': 'O',
    '\u1E52': 'O',
    '\u014E': 'O',
    '\u022E': 'O',
    '\u0230': 'O',
    '\u00D6': 'O',
    '\u022A': 'O',
    '\u1ECE': 'O',
    '\u0150': 'O',
    '\u01D1': 'O',
    '\u020C': 'O',
    '\u020E': 'O',
    '\u01A0': 'O',
    '\u1EDC': 'O',
    '\u1EDA': 'O',
    '\u1EE0': 'O',
    '\u1EDE': 'O',
    '\u1EE2': 'O',
    '\u1ECC': 'O',
    '\u1ED8': 'O',
    '\u01EA': 'O',
    '\u01EC': 'O',
    '\u00D8': 'O',
    '\u01FE': 'O',
    '\u0186': 'O',
    '\u019F': 'O',
    '\uA74A': 'O',
    '\uA74C': 'O',
    '\u01A2': 'OI',
    '\uA74E': 'OO',
    '\u0222': 'OU',
    '\u24C5': 'P',
    '\uFF30': 'P',
    '\u1E54': 'P',
    '\u1E56': 'P',
    '\u01A4': 'P',
    '\u2C63': 'P',
    '\uA750': 'P',
    '\uA752': 'P',
    '\uA754': 'P',
    '\u24C6': 'Q',
    '\uFF31': 'Q',
    '\uA756': 'Q',
    '\uA758': 'Q',
    '\u024A': 'Q',
    '\u24C7': 'R',
    '\uFF32': 'R',
    '\u0154': 'R',
    '\u1E58': 'R',
    '\u0158': 'R',
    '\u0210': 'R',
    '\u0212': 'R',
    '\u1E5A': 'R',
    '\u1E5C': 'R',
    '\u0156': 'R',
    '\u1E5E': 'R',
    '\u024C': 'R',
    '\u2C64': 'R',
    '\uA75A': 'R',
    '\uA7A6': 'R',
    '\uA782': 'R',
    '\u24C8': 'S',
    '\uFF33': 'S',
    '\u1E9E': 'S',
    '\u015A': 'S',
    '\u1E64': 'S',
    '\u015C': 'S',
    '\u1E60': 'S',
    '\u0160': 'S',
    '\u1E66': 'S',
    '\u1E62': 'S',
    '\u1E68': 'S',
    '\u0218': 'S',
    '\u015E': 'S',
    '\u2C7E': 'S',
    '\uA7A8': 'S',
    '\uA784': 'S',
    '\u24C9': 'T',
    '\uFF34': 'T',
    '\u1E6A': 'T',
    '\u0164': 'T',
    '\u1E6C': 'T',
    '\u021A': 'T',
    '\u0162': 'T',
    '\u1E70': 'T',
    '\u1E6E': 'T',
    '\u0166': 'T',
    '\u01AC': 'T',
    '\u01AE': 'T',
    '\u023E': 'T',
    '\uA786': 'T',
    '\uA728': 'TZ',
    '\u24CA': 'U',
    '\uFF35': 'U',
    '\u00D9': 'U',
    '\u00DA': 'U',
    '\u00DB': 'U',
    '\u0168': 'U',
    '\u1E78': 'U',
    '\u016A': 'U',
    '\u1E7A': 'U',
    '\u016C': 'U',
    '\u00DC': 'U',
    '\u01DB': 'U',
    '\u01D7': 'U',
    '\u01D5': 'U',
    '\u01D9': 'U',
    '\u1EE6': 'U',
    '\u016E': 'U',
    '\u0170': 'U',
    '\u01D3': 'U',
    '\u0214': 'U',
    '\u0216': 'U',
    '\u01AF': 'U',
    '\u1EEA': 'U',
    '\u1EE8': 'U',
    '\u1EEE': 'U',
    '\u1EEC': 'U',
    '\u1EF0': 'U',
    '\u1EE4': 'U',
    '\u1E72': 'U',
    '\u0172': 'U',
    '\u1E76': 'U',
    '\u1E74': 'U',
    '\u0244': 'U',
    '\u24CB': 'V',
    '\uFF36': 'V',
    '\u1E7C': 'V',
    '\u1E7E': 'V',
    '\u01B2': 'V',
    '\uA75E': 'V',
    '\u0245': 'V',
    '\uA760': 'VY',
    '\u24CC': 'W',
    '\uFF37': 'W',
    '\u1E80': 'W',
    '\u1E82': 'W',
    '\u0174': 'W',
    '\u1E86': 'W',
    '\u1E84': 'W',
    '\u1E88': 'W',
    '\u2C72': 'W',
    '\u24CD': 'X',
    '\uFF38': 'X',
    '\u1E8A': 'X',
    '\u1E8C': 'X',
    '\u24CE': 'Y',
    '\uFF39': 'Y',
    '\u1EF2': 'Y',
    '\u00DD': 'Y',
    '\u0176': 'Y',
    '\u1EF8': 'Y',
    '\u0232': 'Y',
    '\u1E8E': 'Y',
    '\u0178': 'Y',
    '\u1EF6': 'Y',
    '\u1EF4': 'Y',
    '\u01B3': 'Y',
    '\u024E': 'Y',
    '\u1EFE': 'Y',
    '\u24CF': 'Z',
    '\uFF3A': 'Z',
    '\u0179': 'Z',
    '\u1E90': 'Z',
    '\u017B': 'Z',
    '\u017D': 'Z',
    '\u1E92': 'Z',
    '\u1E94': 'Z',
    '\u01B5': 'Z',
    '\u0224': 'Z',
    '\u2C7F': 'Z',
    '\u2C6B': 'Z',
    '\uA762': 'Z',
    '\u24D0': 'a',
    '\uFF41': 'a',
    '\u1E9A': 'a',
    '\u00E0': 'a',
    '\u00E1': 'a',
    '\u00E2': 'a',
    '\u1EA7': 'a',
    '\u1EA5': 'a',
    '\u1EAB': 'a',
    '\u1EA9': 'a',
    '\u00E3': 'a',
    '\u0101': 'a',
    '\u0103': 'a',
    '\u1EB1': 'a',
    '\u1EAF': 'a',
    '\u1EB5': 'a',
    '\u1EB3': 'a',
    '\u0227': 'a',
    '\u01E1': 'a',
    '\u00E4': 'a',
    '\u01DF': 'a',
    '\u1EA3': 'a',
    '\u00E5': 'a',
    '\u01FB': 'a',
    '\u01CE': 'a',
    '\u0201': 'a',
    '\u0203': 'a',
    '\u1EA1': 'a',
    '\u1EAD': 'a',
    '\u1EB7': 'a',
    '\u1E01': 'a',
    '\u0105': 'a',
    '\u2C65': 'a',
    '\u0250': 'a',
    '\uA733': 'aa',
    '\u00E6': 'ae',
    '\u01FD': 'ae',
    '\u01E3': 'ae',
    '\uA735': 'ao',
    '\uA737': 'au',
    '\uA739': 'av',
    '\uA73B': 'av',
    '\uA73D': 'ay',
    '\u24D1': 'b',
    '\uFF42': 'b',
    '\u1E03': 'b',
    '\u1E05': 'b',
    '\u1E07': 'b',
    '\u0180': 'b',
    '\u0183': 'b',
    '\u0253': 'b',
    '\u24D2': 'c',
    '\uFF43': 'c',
    '\u0107': 'c',
    '\u0109': 'c',
    '\u010B': 'c',
    '\u010D': 'c',
    '\u00E7': 'c',
    '\u1E09': 'c',
    '\u0188': 'c',
    '\u023C': 'c',
    '\uA73F': 'c',
    '\u2184': 'c',
    '\u24D3': 'd',
    '\uFF44': 'd',
    '\u1E0B': 'd',
    '\u010F': 'd',
    '\u1E0D': 'd',
    '\u1E11': 'd',
    '\u1E13': 'd',
    '\u1E0F': 'd',
    '\u0111': 'd',
    '\u018C': 'd',
    '\u0256': 'd',
    '\u0257': 'd',
    '\uA77A': 'd',
    '\u01F3': 'dz',
    '\u01C6': 'dz',
    '\u24D4': 'e',
    '\uFF45': 'e',
    '\u00E8': 'e',
    '\u00E9': 'e',
    '\u00EA': 'e',
    '\u1EC1': 'e',
    '\u1EBF': 'e',
    '\u1EC5': 'e',
    '\u1EC3': 'e',
    '\u1EBD': 'e',
    '\u0113': 'e',
    '\u1E15': 'e',
    '\u1E17': 'e',
    '\u0115': 'e',
    '\u0117': 'e',
    '\u00EB': 'e',
    '\u1EBB': 'e',
    '\u011B': 'e',
    '\u0205': 'e',
    '\u0207': 'e',
    '\u1EB9': 'e',
    '\u1EC7': 'e',
    '\u0229': 'e',
    '\u1E1D': 'e',
    '\u0119': 'e',
    '\u1E19': 'e',
    '\u1E1B': 'e',
    '\u0247': 'e',
    '\u025B': 'e',
    '\u01DD': 'e',
    '\u24D5': 'f',
    '\uFF46': 'f',
    '\u1E1F': 'f',
    '\u0192': 'f',
    '\uA77C': 'f',
    '\u24D6': 'g',
    '\uFF47': 'g',
    '\u01F5': 'g',
    '\u011D': 'g',
    '\u1E21': 'g',
    '\u011F': 'g',
    '\u0121': 'g',
    '\u01E7': 'g',
    '\u0123': 'g',
    '\u01E5': 'g',
    '\u0260': 'g',
    '\uA7A1': 'g',
    '\u1D79': 'g',
    '\uA77F': 'g',
    '\u24D7': 'h',
    '\uFF48': 'h',
    '\u0125': 'h',
    '\u1E23': 'h',
    '\u1E27': 'h',
    '\u021F': 'h',
    '\u1E25': 'h',
    '\u1E29': 'h',
    '\u1E2B': 'h',
    '\u1E96': 'h',
    '\u0127': 'h',
    '\u2C68': 'h',
    '\u2C76': 'h',
    '\u0265': 'h',
    '\u0195': 'hv',
    '\u24D8': 'i',
    '\uFF49': 'i',
    '\u00EC': 'i',
    '\u00ED': 'i',
    '\u00EE': 'i',
    '\u0129': 'i',
    '\u012B': 'i',
    '\u012D': 'i',
    '\u00EF': 'i',
    '\u1E2F': 'i',
    '\u1EC9': 'i',
    '\u01D0': 'i',
    '\u0209': 'i',
    '\u020B': 'i',
    '\u1ECB': 'i',
    '\u012F': 'i',
    '\u1E2D': 'i',
    '\u0268': 'i',
    '\u0131': 'i',
    '\u24D9': 'j',
    '\uFF4A': 'j',
    '\u0135': 'j',
    '\u01F0': 'j',
    '\u0249': 'j',
    '\u24DA': 'k',
    '\uFF4B': 'k',
    '\u1E31': 'k',
    '\u01E9': 'k',
    '\u1E33': 'k',
    '\u0137': 'k',
    '\u1E35': 'k',
    '\u0199': 'k',
    '\u2C6A': 'k',
    '\uA741': 'k',
    '\uA743': 'k',
    '\uA745': 'k',
    '\uA7A3': 'k',
    '\u24DB': 'l',
    '\uFF4C': 'l',
    '\u0140': 'l',
    '\u013A': 'l',
    '\u013E': 'l',
    '\u1E37': 'l',
    '\u1E39': 'l',
    '\u013C': 'l',
    '\u1E3D': 'l',
    '\u1E3B': 'l',
    '\u017F': 'l',
    '\u0142': 'l',
    '\u019A': 'l',
    '\u026B': 'l',
    '\u2C61': 'l',
    '\uA749': 'l',
    '\uA781': 'l',
    '\uA747': 'l',
    '\u01C9': 'lj',
    '\u24DC': 'm',
    '\uFF4D': 'm',
    '\u1E3F': 'm',
    '\u1E41': 'm',
    '\u1E43': 'm',
    '\u0271': 'm',
    '\u026F': 'm',
    '\u24DD': 'n',
    '\uFF4E': 'n',
    '\u01F9': 'n',
    '\u0144': 'n',
    '\u00F1': 'n',
    '\u1E45': 'n',
    '\u0148': 'n',
    '\u1E47': 'n',
    '\u0146': 'n',
    '\u1E4B': 'n',
    '\u1E49': 'n',
    '\u019E': 'n',
    '\u0272': 'n',
    '\u0149': 'n',
    '\uA791': 'n',
    '\uA7A5': 'n',
    '\u01CC': 'nj',
    '\u24DE': 'o',
    '\uFF4F': 'o',
    '\u00F2': 'o',
    '\u00F3': 'o',
    '\u00F4': 'o',
    '\u1ED3': 'o',
    '\u1ED1': 'o',
    '\u1ED7': 'o',
    '\u1ED5': 'o',
    '\u00F5': 'o',
    '\u1E4D': 'o',
    '\u022D': 'o',
    '\u1E4F': 'o',
    '\u014D': 'o',
    '\u1E51': 'o',
    '\u1E53': 'o',
    '\u014F': 'o',
    '\u022F': 'o',
    '\u0231': 'o',
    '\u00F6': 'o',
    '\u022B': 'o',
    '\u1ECF': 'o',
    '\u0151': 'o',
    '\u01D2': 'o',
    '\u020D': 'o',
    '\u020F': 'o',
    '\u01A1': 'o',
    '\u1EDD': 'o',
    '\u1EDB': 'o',
    '\u1EE1': 'o',
    '\u1EDF': 'o',
    '\u1EE3': 'o',
    '\u1ECD': 'o',
    '\u1ED9': 'o',
    '\u01EB': 'o',
    '\u01ED': 'o',
    '\u00F8': 'o',
    '\u01FF': 'o',
    '\u0254': 'o',
    '\uA74B': 'o',
    '\uA74D': 'o',
    '\u0275': 'o',
    '\u01A3': 'oi',
    '\u0223': 'ou',
    '\uA74F': 'oo',
    '\u24DF': 'p',
    '\uFF50': 'p',
    '\u1E55': 'p',
    '\u1E57': 'p',
    '\u01A5': 'p',
    '\u1D7D': 'p',
    '\uA751': 'p',
    '\uA753': 'p',
    '\uA755': 'p',
    '\u24E0': 'q',
    '\uFF51': 'q',
    '\u024B': 'q',
    '\uA757': 'q',
    '\uA759': 'q',
    '\u24E1': 'r',
    '\uFF52': 'r',
    '\u0155': 'r',
    '\u1E59': 'r',
    '\u0159': 'r',
    '\u0211': 'r',
    '\u0213': 'r',
    '\u1E5B': 'r',
    '\u1E5D': 'r',
    '\u0157': 'r',
    '\u1E5F': 'r',
    '\u024D': 'r',
    '\u027D': 'r',
    '\uA75B': 'r',
    '\uA7A7': 'r',
    '\uA783': 'r',
    '\u24E2': 's',
    '\uFF53': 's',
    '\u00DF': 's',
    '\u015B': 's',
    '\u1E65': 's',
    '\u015D': 's',
    '\u1E61': 's',
    '\u0161': 's',
    '\u1E67': 's',
    '\u1E63': 's',
    '\u1E69': 's',
    '\u0219': 's',
    '\u015F': 's',
    '\u023F': 's',
    '\uA7A9': 's',
    '\uA785': 's',
    '\u1E9B': 's',
    '\u24E3': 't',
    '\uFF54': 't',
    '\u1E6B': 't',
    '\u1E97': 't',
    '\u0165': 't',
    '\u1E6D': 't',
    '\u021B': 't',
    '\u0163': 't',
    '\u1E71': 't',
    '\u1E6F': 't',
    '\u0167': 't',
    '\u01AD': 't',
    '\u0288': 't',
    '\u2C66': 't',
    '\uA787': 't',
    '\uA729': 'tz',
    '\u24E4': 'u',
    '\uFF55': 'u',
    '\u00F9': 'u',
    '\u00FA': 'u',
    '\u00FB': 'u',
    '\u0169': 'u',
    '\u1E79': 'u',
    '\u016B': 'u',
    '\u1E7B': 'u',
    '\u016D': 'u',
    '\u00FC': 'u',
    '\u01DC': 'u',
    '\u01D8': 'u',
    '\u01D6': 'u',
    '\u01DA': 'u',
    '\u1EE7': 'u',
    '\u016F': 'u',
    '\u0171': 'u',
    '\u01D4': 'u',
    '\u0215': 'u',
    '\u0217': 'u',
    '\u01B0': 'u',
    '\u1EEB': 'u',
    '\u1EE9': 'u',
    '\u1EEF': 'u',
    '\u1EED': 'u',
    '\u1EF1': 'u',
    '\u1EE5': 'u',
    '\u1E73': 'u',
    '\u0173': 'u',
    '\u1E77': 'u',
    '\u1E75': 'u',
    '\u0289': 'u',
    '\u24E5': 'v',
    '\uFF56': 'v',
    '\u1E7D': 'v',
    '\u1E7F': 'v',
    '\u028B': 'v',
    '\uA75F': 'v',
    '\u028C': 'v',
    '\uA761': 'vy',
    '\u24E6': 'w',
    '\uFF57': 'w',
    '\u1E81': 'w',
    '\u1E83': 'w',
    '\u0175': 'w',
    '\u1E87': 'w',
    '\u1E85': 'w',
    '\u1E98': 'w',
    '\u1E89': 'w',
    '\u2C73': 'w',
    '\u24E7': 'x',
    '\uFF58': 'x',
    '\u1E8B': 'x',
    '\u1E8D': 'x',
    '\u24E8': 'y',
    '\uFF59': 'y',
    '\u1EF3': 'y',
    '\u00FD': 'y',
    '\u0177': 'y',
    '\u1EF9': 'y',
    '\u0233': 'y',
    '\u1E8F': 'y',
    '\u00FF': 'y',
    '\u1EF7': 'y',
    '\u1E99': 'y',
    '\u1EF5': 'y',
    '\u01B4': 'y',
    '\u024F': 'y',
    '\u1EFF': 'y',
    '\u24E9': 'z',
    '\uFF5A': 'z',
    '\u017A': 'z',
    '\u1E91': 'z',
    '\u017C': 'z',
    '\u017E': 'z',
    '\u1E93': 'z',
    '\u1E95': 'z',
    '\u01B6': 'z',
    '\u0225': 'z',
    '\u0240': 'z',
    '\u2C6C': 'z',
    '\uA763': 'z',
    '\u0386': '\u0391',
    '\u0388': '\u0395',
    '\u0389': '\u0397',
    '\u038A': '\u0399',
    '\u03AA': '\u0399',
    '\u038C': '\u039F',
    '\u038E': '\u03A5',
    '\u03AB': '\u03A5',
    '\u038F': '\u03A9',
    '\u03AC': '\u03B1',
    '\u03AD': '\u03B5',
    '\u03AE': '\u03B7',
    '\u03AF': '\u03B9',
    '\u03CA': '\u03B9',
    '\u0390': '\u03B9',
    '\u03CC': '\u03BF',
    '\u03CD': '\u03C5',
    '\u03CB': '\u03C5',
    '\u03B0': '\u03C5',
    '\u03C9': '\u03C9',
    '\u03C2': '\u03C3'
};
/**
 * @param {?} text
 * @return {?}
 */
function stripSpecialChars(text) {
    /** @type {?} */
    const match = (/**
     * @param {?} a
     * @return {?}
     */
    (a) => {
        return diacritics[a] || a;
    });
    return text.replace(/[^\u0000-\u007E]/g, match);
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class ItemsList {
    /**
     * @param {?} _ngSelect
     * @param {?} _selectionModel
     */
    constructor(_ngSelect, _selectionModel) {
        this._ngSelect = _ngSelect;
        this._selectionModel = _selectionModel;
        this._items = [];
        this._filteredItems = [];
        this._markedIndex = -1;
    }
    /**
     * @return {?}
     */
    get items() {
        return this._items;
    }
    /**
     * @return {?}
     */
    get filteredItems() {
        return this._filteredItems;
    }
    /**
     * @return {?}
     */
    get markedIndex() {
        return this._markedIndex;
    }
    /**
     * @return {?}
     */
    get selectedItems() {
        return this._selectionModel.value;
    }
    /**
     * @return {?}
     */
    get markedItem() {
        return this._filteredItems[this._markedIndex];
    }
    /**
     * @return {?}
     */
    get noItemsToSelect() {
        return this._ngSelect.hideSelected && this._items.length === this.selectedItems.length;
    }
    /**
     * @return {?}
     */
    get maxItemsSelected() {
        return this._ngSelect.multiple && this._ngSelect.maxSelectedItems <= this.selectedItems.length;
    }
    /**
     * @return {?}
     */
    get lastSelectedItem() {
        /** @type {?} */
        let i = this.selectedItems.length - 1;
        for (; i >= 0; i--) {
            /** @type {?} */
            let item = this.selectedItems[i];
            if (!item.disabled) {
                return item;
            }
        }
        return null;
    }
    /**
     * @param {?} items
     * @return {?}
     */
    setItems(items) {
        this._items = items.map((/**
         * @param {?} item
         * @param {?} index
         * @return {?}
         */
        (item, index) => this.mapItem(item, index)));
        if (this._ngSelect.groupBy) {
            this._groups = this._groupBy(this._items, this._ngSelect.groupBy);
            this._items = this._flatten(this._groups);
        }
        else {
            this._groups = new Map();
            this._groups.set(undefined, this._items);
        }
        this._filteredItems = [...this._items];
    }
    /**
     * @param {?} item
     * @return {?}
     */
    select(item) {
        if (item.selected || this.maxItemsSelected) {
            return;
        }
        /** @type {?} */
        const multiple = this._ngSelect.multiple;
        if (!multiple) {
            this.clearSelected();
        }
        this._selectionModel.select(item, multiple, this._ngSelect.selectableGroupAsModel);
        if (this._ngSelect.hideSelected) {
            this._hideSelected(item);
        }
    }
    /**
     * @param {?} item
     * @return {?}
     */
    unselect(item) {
        if (!item.selected) {
            return;
        }
        this._selectionModel.unselect(item, this._ngSelect.multiple);
        if (this._ngSelect.hideSelected && isDefined(item.index) && this._ngSelect.multiple) {
            this._showSelected(item);
        }
    }
    /**
     * @param {?} value
     * @return {?}
     */
    findItem(value) {
        /** @type {?} */
        let findBy;
        if (this._ngSelect.compareWith) {
            findBy = (/**
             * @param {?} item
             * @return {?}
             */
            item => this._ngSelect.compareWith(item.value, value));
        }
        else if (this._ngSelect.bindValue) {
            findBy = (/**
             * @param {?} item
             * @return {?}
             */
            item => !item.children && this.resolveNested(item.value, this._ngSelect.bindValue) === value);
        }
        else {
            findBy = (/**
             * @param {?} item
             * @return {?}
             */
            item => item.value === value ||
                !item.children && item.label && item.label === this.resolveNested(value, this._ngSelect.bindLabel));
        }
        return this._items.find((/**
         * @param {?} item
         * @return {?}
         */
        item => findBy(item)));
    }
    /**
     * @param {?} item
     * @return {?}
     */
    addItem(item) {
        /** @type {?} */
        const option = this.mapItem(item, this._items.length);
        this._items.push(option);
        this._filteredItems.push(option);
        return option;
    }
    /**
     * @param {?=} keepDisabled
     * @return {?}
     */
    clearSelected(keepDisabled = false) {
        this._selectionModel.clear(keepDisabled);
        this._items.forEach((/**
         * @param {?} item
         * @return {?}
         */
        item => {
            item.selected = keepDisabled && item.selected && item.disabled;
            item.marked = false;
        }));
        if (this._ngSelect.hideSelected) {
            this.resetFilteredItems();
        }
    }
    /**
     * @param {?} term
     * @return {?}
     */
    findByLabel(term) {
        term = stripSpecialChars(term).toLocaleLowerCase();
        return this.filteredItems.find((/**
         * @param {?} item
         * @return {?}
         */
        item => {
            /** @type {?} */
            const label = stripSpecialChars(item.label).toLocaleLowerCase();
            return label.substr(0, term.length) === term;
        }));
    }
    /**
     * @param {?} term
     * @return {?}
     */
    filter(term) {
        if (!term) {
            this.resetFilteredItems();
            return;
        }
        this._filteredItems = [];
        term = this._ngSelect.searchFn ? term : stripSpecialChars(term).toLocaleLowerCase();
        /** @type {?} */
        const match = this._ngSelect.searchFn || this._defaultSearchFn;
        /** @type {?} */
        const hideSelected = this._ngSelect.hideSelected;
        for (const key of Array.from(this._groups.keys())) {
            /** @type {?} */
            const matchedItems = [];
            for (const item of this._groups.get(key)) {
                if (hideSelected && (item.parent && item.parent.selected || item.selected)) {
                    continue;
                }
                /** @type {?} */
                const searchItem = this._ngSelect.searchFn ? item.value : item;
                if (match(term, searchItem)) {
                    matchedItems.push(item);
                }
            }
            if (matchedItems.length > 0) {
                const [last] = matchedItems.slice(-1);
                if (last.parent) {
                    /** @type {?} */
                    const head = this._items.find((/**
                     * @param {?} x
                     * @return {?}
                     */
                    x => x === last.parent));
                    this._filteredItems.push(head);
                }
                this._filteredItems.push(...matchedItems);
            }
        }
    }
    /**
     * @return {?}
     */
    resetFilteredItems() {
        if (this._filteredItems.length === this._items.length) {
            return;
        }
        if (this._ngSelect.hideSelected && this.selectedItems.length > 0) {
            this._filteredItems = this._items.filter((/**
             * @param {?} x
             * @return {?}
             */
            x => !x.selected));
        }
        else {
            this._filteredItems = this._items;
        }
    }
    /**
     * @return {?}
     */
    unmarkItem() {
        this._markedIndex = -1;
    }
    /**
     * @return {?}
     */
    markNextItem() {
        this._stepToItem(+1);
    }
    /**
     * @return {?}
     */
    markPreviousItem() {
        this._stepToItem(-1);
    }
    /**
     * @param {?} item
     * @return {?}
     */
    markItem(item) {
        this._markedIndex = this._filteredItems.indexOf(item);
    }
    /**
     * @param {?=} markDefault
     * @return {?}
     */
    markSelectedOrDefault(markDefault) {
        if (this._filteredItems.length === 0) {
            return;
        }
        /** @type {?} */
        const lastMarkedIndex = this._getLastMarkedIndex();
        if (lastMarkedIndex > -1) {
            this._markedIndex = lastMarkedIndex;
        }
        else {
            this._markedIndex = markDefault ? this.filteredItems.findIndex((/**
             * @param {?} x
             * @return {?}
             */
            x => !x.disabled)) : -1;
        }
    }
    /**
     * @param {?} option
     * @param {?} key
     * @return {?}
     */
    resolveNested(option, key) {
        if (!isObject(option)) {
            return option;
        }
        if (key.indexOf('.') === -1) {
            return option[key];
        }
        else {
            /** @type {?} */
            let keys = key.split('.');
            /** @type {?} */
            let value = option;
            for (let i = 0, len = keys.length; i < len; ++i) {
                if (value == null) {
                    return null;
                }
                value = value[keys[i]];
            }
            return value;
        }
    }
    /**
     * @param {?} item
     * @param {?} index
     * @return {?}
     */
    mapItem(item, index) {
        /** @type {?} */
        const label = isDefined(item.$ngOptionLabel) ? item.$ngOptionLabel : this.resolveNested(item, this._ngSelect.bindLabel);
        /** @type {?} */
        const value = isDefined(item.$ngOptionValue) ? item.$ngOptionValue : item;
        return {
            index: index,
            label: isDefined(label) ? label.toString() : '',
            value: value,
            disabled: item.disabled,
            htmlId: `${this._ngSelect.dropdownId}-${index}`,
        };
    }
    /**
     * @return {?}
     */
    mapSelectedItems() {
        /** @type {?} */
        const multiple = this._ngSelect.multiple;
        for (const selected of this.selectedItems) {
            /** @type {?} */
            const value = this._ngSelect.bindValue ? this.resolveNested(selected.value, this._ngSelect.bindValue) : selected.value;
            /** @type {?} */
            const item = isDefined(value) ? this.findItem(value) : null;
            this._selectionModel.unselect(selected, multiple);
            this._selectionModel.select(item || selected, multiple, this._ngSelect.selectableGroupAsModel);
        }
        if (this._ngSelect.hideSelected) {
            this._filteredItems = this.filteredItems.filter((/**
             * @param {?} x
             * @return {?}
             */
            x => this.selectedItems.indexOf(x) === -1));
        }
    }
    /**
     * @private
     * @param {?} item
     * @return {?}
     */
    _showSelected(item) {
        this._filteredItems.push(item);
        if (item.parent) {
            /** @type {?} */
            const parent = item.parent;
            /** @type {?} */
            const parentExists = this._filteredItems.find((/**
             * @param {?} x
             * @return {?}
             */
            x => x === parent));
            if (!parentExists) {
                this._filteredItems.push(parent);
            }
        }
        else if (item.children) {
            for (const child of item.children) {
                child.selected = false;
                this._filteredItems.push(child);
            }
        }
        this._filteredItems = [...this._filteredItems.sort((/**
             * @param {?} a
             * @param {?} b
             * @return {?}
             */
            (a, b) => (a.index - b.index)))];
    }
    /**
     * @private
     * @param {?} item
     * @return {?}
     */
    _hideSelected(item) {
        this._filteredItems = this._filteredItems.filter((/**
         * @param {?} x
         * @return {?}
         */
        x => x !== item));
        if (item.parent) {
            /** @type {?} */
            const children = item.parent.children;
            if (children.every((/**
             * @param {?} x
             * @return {?}
             */
            x => x.selected))) {
                this._filteredItems = this._filteredItems.filter((/**
                 * @param {?} x
                 * @return {?}
                 */
                x => x !== item.parent));
            }
        }
        else if (item.children) {
            this._filteredItems = this.filteredItems.filter((/**
             * @param {?} x
             * @return {?}
             */
            x => x.parent !== item));
        }
    }
    /**
     * @private
     * @param {?} search
     * @param {?} opt
     * @return {?}
     */
    _defaultSearchFn(search, opt) {
        /** @type {?} */
        const label = stripSpecialChars(opt.label).toLocaleLowerCase();
        return label.indexOf(search) > -1;
    }
    /**
     * @private
     * @param {?} steps
     * @return {?}
     */
    _getNextItemIndex(steps) {
        if (steps > 0) {
            return (this._markedIndex === this._filteredItems.length - 1) ? 0 : (this._markedIndex + 1);
        }
        return (this._markedIndex <= 0) ? (this._filteredItems.length - 1) : (this._markedIndex - 1);
    }
    /**
     * @private
     * @param {?} steps
     * @return {?}
     */
    _stepToItem(steps) {
        if (this._filteredItems.length === 0 || this._filteredItems.every((/**
         * @param {?} x
         * @return {?}
         */
        x => x.disabled))) {
            return;
        }
        this._markedIndex = this._getNextItemIndex(steps);
        if (this.markedItem.disabled) {
            this._stepToItem(steps);
        }
    }
    /**
     * @private
     * @return {?}
     */
    _getLastMarkedIndex() {
        if (this._ngSelect.hideSelected) {
            return -1;
        }
        if (this._markedIndex > -1 && this.markedItem === undefined) {
            return -1;
        }
        /** @type {?} */
        const selectedIndex = this._filteredItems.indexOf(this.lastSelectedItem);
        if (this.lastSelectedItem && selectedIndex < 0) {
            return -1;
        }
        return Math.max(this.markedIndex, selectedIndex);
    }
    /**
     * @private
     * @param {?} items
     * @param {?} prop
     * @return {?}
     */
    _groupBy(items, prop) {
        /** @type {?} */
        const groups = new Map();
        if (items.length === 0) {
            return groups;
        }
        // Check if items are already grouped by given key.
        if (Array.isArray(items[0].value[(/** @type {?} */ (prop))])) {
            for (const item of items) {
                /** @type {?} */
                const children = (item.value[(/** @type {?} */ (prop))] || []).map((/**
                 * @param {?} x
                 * @param {?} index
                 * @return {?}
                 */
                (x, index) => this.mapItem(x, index)));
                groups.set(item, children);
            }
            return groups;
        }
        /** @type {?} */
        const isFnKey = isFunction(this._ngSelect.groupBy);
        /** @type {?} */
        const keyFn = (/**
         * @param {?} item
         * @return {?}
         */
        (item) => {
            /** @type {?} */
            let key = isFnKey ? ((/** @type {?} */ (prop)))(item.value) : item.value[(/** @type {?} */ (prop))];
            return isDefined(key) ? key : undefined;
        });
        // Group items by key.
        for (const item of items) {
            /** @type {?} */
            let key = keyFn(item);
            /** @type {?} */
            const group = groups.get(key);
            if (group) {
                group.push(item);
            }
            else {
                groups.set(key, [item]);
            }
        }
        return groups;
    }
    /**
     * @private
     * @param {?} groups
     * @return {?}
     */
    _flatten(groups) {
        /** @type {?} */
        const isGroupByFn = isFunction(this._ngSelect.groupBy);
        /** @type {?} */
        const items = [];
        for (const key of Array.from(groups.keys())) {
            /** @type {?} */
            let i = items.length;
            if (key === undefined) {
                /** @type {?} */
                const withoutGroup = groups.get(undefined) || [];
                items.push(...withoutGroup.map((/**
                 * @param {?} x
                 * @return {?}
                 */
                x => (Object.assign({}, x, { index: i++ })))));
                continue;
            }
            /** @type {?} */
            const isObjectKey = isObject(key);
            /** @type {?} */
            const parent = {
                label: isObjectKey ? '' : String(key),
                children: undefined,
                parent: null,
                index: i++,
                disabled: !this._ngSelect.selectableGroup,
                htmlId: newId(),
            };
            /** @type {?} */
            const groupKey = isGroupByFn ? this._ngSelect.bindLabel : (/** @type {?} */ (this._ngSelect.groupBy));
            /** @type {?} */
            const groupValue = this._ngSelect.groupValue || ((/**
             * @return {?}
             */
            () => {
                if (isObjectKey) {
                    return ((/** @type {?} */ (key))).value;
                }
                return { [groupKey]: key };
            }));
            /** @type {?} */
            const children = groups.get(key).map((/**
             * @param {?} x
             * @return {?}
             */
            x => {
                x.parent = parent;
                x.children = undefined;
                x.index = i++;
                return x;
            }));
            parent.children = children;
            parent.value = groupValue(key, children.map((/**
             * @param {?} x
             * @return {?}
             */
            x => x.value)));
            items.push(parent);
            items.push(...children);
        }
        return items;
    }
}
if (false) {}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @record
 */
function NgOption() { }
if (false) {}
/** @enum {number} */
const KeyCode = {
    Tab: 9,
    Enter: 13,
    Esc: 27,
    Space: 32,
    ArrowUp: 38,
    ArrowDown: 40,
    Backspace: 8,
};
KeyCode[KeyCode.Tab] = 'Tab';
KeyCode[KeyCode.Enter] = 'Enter';
KeyCode[KeyCode.Esc] = 'Esc';
KeyCode[KeyCode.Space] = 'Space';
KeyCode[KeyCode.ArrowUp] = 'ArrowUp';
KeyCode[KeyCode.ArrowDown] = 'ArrowDown';
KeyCode[KeyCode.Backspace] = 'Backspace';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @record
 */
function ItemsRangeResult() { }
if (false) {}
/**
 * @record
 */
function PanelDimensions() { }
if (false) {}
class NgDropdownPanelService {
    constructor() {
        this._dimensions = {
            itemHeight: 0,
            panelHeight: 0,
            itemsPerViewport: 0
        };
    }
    /**
     * @return {?}
     */
    get dimensions() {
        return this._dimensions;
    }
    /**
     * @param {?} scrollPos
     * @param {?} itemsLength
     * @param {?} buffer
     * @return {?}
     */
    calculateItems(scrollPos, itemsLength, buffer) {
        /** @type {?} */
        const d = this._dimensions;
        /** @type {?} */
        const scrollHeight = d.itemHeight * itemsLength;
        /** @type {?} */
        const scrollTop = Math.max(0, scrollPos);
        /** @type {?} */
        const indexByScrollTop = scrollTop / scrollHeight * itemsLength;
        /** @type {?} */
        let end = Math.min(itemsLength, Math.ceil(indexByScrollTop) + (d.itemsPerViewport + 1));
        /** @type {?} */
        const maxStartEnd = end;
        /** @type {?} */
        const maxStart = Math.max(0, maxStartEnd - d.itemsPerViewport);
        /** @type {?} */
        let start = Math.min(maxStart, Math.floor(indexByScrollTop));
        /** @type {?} */
        let topPadding = d.itemHeight * Math.ceil(start) - (d.itemHeight * Math.min(start, buffer));
        topPadding = !isNaN(topPadding) ? topPadding : 0;
        start = !isNaN(start) ? start : -1;
        end = !isNaN(end) ? end : -1;
        start -= buffer;
        start = Math.max(0, start);
        end += buffer;
        end = Math.min(itemsLength, end);
        return {
            topPadding,
            scrollHeight,
            start,
            end
        };
    }
    /**
     * @param {?} itemHeight
     * @param {?} panelHeight
     * @return {?}
     */
    setDimensions(itemHeight, panelHeight) {
        /** @type {?} */
        const itemsPerViewport = Math.max(1, Math.floor(panelHeight / itemHeight));
        this._dimensions = {
            itemHeight,
            panelHeight,
            itemsPerViewport
        };
    }
    /**
     * @param {?} itemTop
     * @param {?} itemHeight
     * @param {?} lastScroll
     * @return {?}
     */
    getScrollTo(itemTop, itemHeight, lastScroll) {
        const { panelHeight } = this.dimensions;
        /** @type {?} */
        const itemBottom = itemTop + itemHeight;
        /** @type {?} */
        const top = lastScroll;
        /** @type {?} */
        const bottom = top + panelHeight;
        if (panelHeight >= itemBottom && lastScroll === itemTop) {
            return null;
        }
        if (itemBottom > bottom) {
            return top + itemBottom - bottom;
        }
        else if (itemTop <= top) {
            return itemTop;
        }
        return null;
    }
}
if (false) {}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
const TOP_CSS_CLASS = 'ng-select-top';
/** @type {?} */
const BOTTOM_CSS_CLASS = 'ng-select-bottom';
/** @type {?} */
const SCROLL_SCHEDULER = typeof requestAnimationFrame !== 'undefined' ? animationFrame["a" /* animationFrame */] : asap;
class ng_select_ng_select_NgDropdownPanelComponent {
    /**
     * @param {?} _renderer
     * @param {?} _zone
     * @param {?} _panelService
     * @param {?} _elementRef
     * @param {?} _document
     */
    constructor(_renderer, _zone, _panelService, _elementRef, _document) {
        this._renderer = _renderer;
        this._zone = _zone;
        this._panelService = _panelService;
        this._document = _document;
        this.items = [];
        this.position = 'auto';
        this.virtualScroll = false;
        this.filterValue = null;
        this.update = new core["w" /* EventEmitter */]();
        this.scroll = new core["w" /* EventEmitter */]();
        this.scrollToEnd = new core["w" /* EventEmitter */]();
        this.outsideClick = new core["w" /* EventEmitter */]();
        this._destroy$ = new Subject["a" /* Subject */]();
        this._scrollToEndFired = false;
        this._updateScrollHeight = false;
        this._lastScrollPosition = 0;
        this._dropdown = _elementRef.nativeElement;
    }
    /**
     * @return {?}
     */
    get currentPosition() {
        return this._currentPosition;
    }
    /**
     * @private
     * @return {?}
     */
    get itemsLength() {
        return this._itemsLength;
    }
    /**
     * @private
     * @param {?} value
     * @return {?}
     */
    set itemsLength(value) {
        if (value !== this._itemsLength) {
            this._itemsLength = value;
            this._onItemsLengthChanged();
        }
    }
    /**
     * @private
     * @return {?}
     */
    get _startOffset() {
        if (this.markedItem) {
            const { itemHeight, panelHeight } = this._panelService.dimensions;
            /** @type {?} */
            const offset = this.markedItem.index * itemHeight;
            return panelHeight > offset ? 0 : offset;
        }
        return 0;
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    handleMousedown($event) {
        /** @type {?} */
        const target = (/** @type {?} */ ($event.target));
        if (target.tagName === 'INPUT') {
            return;
        }
        $event.preventDefault();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this._select = this._dropdown.parentElement;
        this._virtualPadding = this.paddingElementRef.nativeElement;
        this._scrollablePanel = this.scrollElementRef.nativeElement;
        this._contentPanel = this.contentElementRef.nativeElement;
        this._handleScroll();
        this._handleOutsideClick();
        this._appendDropdown();
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    ngOnChanges(changes) {
        if (changes.items) {
            /** @type {?} */
            const change = changes.items;
            this._onItemsChange(change.currentValue, change.firstChange);
        }
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        this._destroy$.next();
        this._destroy$.complete();
        this._destroy$.unsubscribe();
        if (this.appendTo) {
            this._renderer.removeChild(this._dropdown.parentNode, this._dropdown);
        }
    }
    /**
     * @param {?} option
     * @param {?=} startFromOption
     * @return {?}
     */
    scrollTo(option, startFromOption = false) {
        if (!option) {
            return;
        }
        /** @type {?} */
        const index = this.items.indexOf(option);
        if (index < 0 || index >= this.itemsLength) {
            return;
        }
        /** @type {?} */
        let scrollTo;
        if (this.virtualScroll) {
            /** @type {?} */
            const itemHeight = this._panelService.dimensions.itemHeight;
            scrollTo = this._panelService.getScrollTo(index * itemHeight, itemHeight, this._lastScrollPosition);
        }
        else {
            /** @type {?} */
            const item = this._dropdown.querySelector(`#${option.htmlId}`);
            /** @type {?} */
            const lastScroll = startFromOption ? item.offsetTop : this._lastScrollPosition;
            scrollTo = this._panelService.getScrollTo(item.offsetTop, item.clientHeight, lastScroll);
        }
        if (isDefined(scrollTo)) {
            this._scrollablePanel.scrollTop = scrollTo;
        }
    }
    /**
     * @return {?}
     */
    scrollToTag() {
        /** @type {?} */
        const panel = this._scrollablePanel;
        panel.scrollTop = panel.scrollHeight - panel.clientHeight;
    }
    /**
     * @return {?}
     */
    adjustPosition() {
        /** @type {?} */
        const parent = this._parent.getBoundingClientRect();
        /** @type {?} */
        const select = this._select.getBoundingClientRect();
        this._setOffset(parent, select);
    }
    /**
     * @private
     * @return {?}
     */
    _handleDropdownPosition() {
        this._currentPosition = this._calculateCurrentPosition(this._dropdown);
        if (this._currentPosition === 'top') {
            this._renderer.addClass(this._dropdown, TOP_CSS_CLASS);
            this._renderer.removeClass(this._dropdown, BOTTOM_CSS_CLASS);
            this._renderer.addClass(this._select, TOP_CSS_CLASS);
            this._renderer.removeClass(this._select, BOTTOM_CSS_CLASS);
        }
        else {
            this._renderer.addClass(this._dropdown, BOTTOM_CSS_CLASS);
            this._renderer.removeClass(this._dropdown, TOP_CSS_CLASS);
            this._renderer.addClass(this._select, BOTTOM_CSS_CLASS);
            this._renderer.removeClass(this._select, TOP_CSS_CLASS);
        }
        if (this.appendTo) {
            this._updatePosition();
        }
        this._dropdown.style.opacity = '1';
    }
    /**
     * @private
     * @return {?}
     */
    _handleScroll() {
        this._zone.runOutsideAngular((/**
         * @return {?}
         */
        () => {
            Object(fromEvent["a" /* fromEvent */])(this.scrollElementRef.nativeElement, 'scroll')
                .pipe(Object(takeUntil["a" /* takeUntil */])(this._destroy$), auditTime(0, SCROLL_SCHEDULER))
                .subscribe((/**
             * @param {?} e
             * @return {?}
             */
            (e) => this._onContentScrolled(e.target.scrollTop)));
        }));
    }
    /**
     * @private
     * @return {?}
     */
    _handleOutsideClick() {
        if (!this._document) {
            return;
        }
        this._zone.runOutsideAngular((/**
         * @return {?}
         */
        () => {
            Object(merge["a" /* merge */])(Object(fromEvent["a" /* fromEvent */])(this._document, 'touchstart', { capture: true }), Object(fromEvent["a" /* fromEvent */])(this._document, 'mousedown', { capture: true })).pipe(Object(takeUntil["a" /* takeUntil */])(this._destroy$))
                .subscribe((/**
             * @param {?} $event
             * @return {?}
             */
            $event => this._checkToClose($event)));
        }));
    }
    /**
     * @private
     * @param {?} $event
     * @return {?}
     */
    _checkToClose($event) {
        if (this._select.contains($event.target) || this._dropdown.contains($event.target)) {
            return;
        }
        /** @type {?} */
        const path = $event.path || ($event.composedPath && $event.composedPath());
        if ($event.target && $event.target.shadowRoot && path && path[0] && this._select.contains(path[0])) {
            return;
        }
        this._zone.run((/**
         * @return {?}
         */
        () => this.outsideClick.emit()));
    }
    /**
     * @private
     * @param {?} items
     * @param {?} firstChange
     * @return {?}
     */
    _onItemsChange(items, firstChange) {
        this.items = items || [];
        this._scrollToEndFired = false;
        this.itemsLength = items.length;
        if (this.virtualScroll) {
            this._updateItemsRange(firstChange);
        }
        else {
            this._updateItems(firstChange);
        }
    }
    /**
     * @private
     * @param {?} firstChange
     * @return {?}
     */
    _updateItems(firstChange) {
        this.update.emit(this.items);
        if (firstChange === false) {
            return;
        }
        this._zone.runOutsideAngular((/**
         * @return {?}
         */
        () => {
            Promise.resolve().then((/**
             * @return {?}
             */
            () => {
                /** @type {?} */
                const panelHeight = this._scrollablePanel.clientHeight;
                this._panelService.setDimensions(0, panelHeight);
                this._handleDropdownPosition();
                this.scrollTo(this.markedItem, firstChange);
            }));
        }));
    }
    /**
     * @private
     * @param {?} firstChange
     * @return {?}
     */
    _updateItemsRange(firstChange) {
        this._zone.runOutsideAngular((/**
         * @return {?}
         */
        () => {
            this._measureDimensions().then((/**
             * @return {?}
             */
            () => {
                if (firstChange) {
                    this._renderItemsRange(this._startOffset);
                    this._handleDropdownPosition();
                }
                else {
                    this._renderItemsRange();
                }
            }));
        }));
    }
    /**
     * @private
     * @param {?} scrollTop
     * @return {?}
     */
    _onContentScrolled(scrollTop) {
        if (this.virtualScroll) {
            this._renderItemsRange(scrollTop);
        }
        this._lastScrollPosition = scrollTop;
        this._fireScrollToEnd(scrollTop);
    }
    /**
     * @private
     * @param {?} height
     * @return {?}
     */
    _updateVirtualHeight(height) {
        if (this._updateScrollHeight) {
            this._virtualPadding.style.height = `${height}px`;
            this._updateScrollHeight = false;
        }
    }
    /**
     * @private
     * @return {?}
     */
    _onItemsLengthChanged() {
        this._updateScrollHeight = true;
    }
    /**
     * @private
     * @param {?=} scrollTop
     * @return {?}
     */
    _renderItemsRange(scrollTop = null) {
        if (scrollTop && this._lastScrollPosition === scrollTop) {
            return;
        }
        scrollTop = scrollTop || this._scrollablePanel.scrollTop;
        /** @type {?} */
        const range = this._panelService.calculateItems(scrollTop, this.itemsLength, this.bufferAmount);
        this._updateVirtualHeight(range.scrollHeight);
        this._contentPanel.style.transform = `translateY(${range.topPadding}px)`;
        this._zone.run((/**
         * @return {?}
         */
        () => {
            this.update.emit(this.items.slice(range.start, range.end));
            this.scroll.emit({ start: range.start, end: range.end });
        }));
        if (isDefined(scrollTop) && this._lastScrollPosition === 0) {
            this._scrollablePanel.scrollTop = scrollTop;
            this._lastScrollPosition = scrollTop;
        }
    }
    /**
     * @private
     * @return {?}
     */
    _measureDimensions() {
        if (this._panelService.dimensions.itemHeight > 0 || this.itemsLength === 0) {
            return Promise.resolve(this._panelService.dimensions);
        }
        const [first] = this.items;
        this.update.emit([first]);
        return Promise.resolve().then((/**
         * @return {?}
         */
        () => {
            /** @type {?} */
            const option = this._dropdown.querySelector(`#${first.htmlId}`);
            /** @type {?} */
            const optionHeight = option.clientHeight;
            this._virtualPadding.style.height = `${optionHeight * this.itemsLength}px`;
            /** @type {?} */
            const panelHeight = this._scrollablePanel.clientHeight;
            this._panelService.setDimensions(optionHeight, panelHeight);
            return this._panelService.dimensions;
        }));
    }
    /**
     * @private
     * @param {?} scrollTop
     * @return {?}
     */
    _fireScrollToEnd(scrollTop) {
        if (this._scrollToEndFired || scrollTop === 0) {
            return;
        }
        /** @type {?} */
        const padding = this.virtualScroll ?
            this._virtualPadding :
            this._contentPanel;
        if (scrollTop + this._dropdown.clientHeight >= padding.clientHeight) {
            this._zone.run((/**
             * @return {?}
             */
            () => this.scrollToEnd.emit()));
            this._scrollToEndFired = true;
        }
    }
    /**
     * @private
     * @param {?} dropdownEl
     * @return {?}
     */
    _calculateCurrentPosition(dropdownEl) {
        if (this.position !== 'auto') {
            return this.position;
        }
        /** @type {?} */
        const selectRect = this._select.getBoundingClientRect();
        /** @type {?} */
        const scrollTop = document.documentElement.scrollTop || document.body.scrollTop;
        /** @type {?} */
        const offsetTop = selectRect.top + window.pageYOffset;
        /** @type {?} */
        const height = selectRect.height;
        /** @type {?} */
        const dropdownHeight = dropdownEl.getBoundingClientRect().height;
        if (offsetTop + height + dropdownHeight > scrollTop + document.documentElement.clientHeight) {
            return 'top';
        }
        else {
            return 'bottom';
        }
    }
    /**
     * @private
     * @return {?}
     */
    _appendDropdown() {
        if (!this.appendTo) {
            return;
        }
        this._parent = document.querySelector(this.appendTo);
        if (!parent) {
            throw new Error(`appendTo selector ${this.appendTo} did not found any parent element`);
        }
        this._parent.appendChild(this._dropdown);
    }
    /**
     * @private
     * @return {?}
     */
    _updatePosition() {
        /** @type {?} */
        const select = this._select.getBoundingClientRect();
        /** @type {?} */
        const parent = this._parent.getBoundingClientRect();
        /** @type {?} */
        const offsetLeft = select.left - parent.left;
        this._setOffset(parent, select);
        this._dropdown.style.left = offsetLeft + 'px';
        this._dropdown.style.width = select.width + 'px';
        this._dropdown.style.minWidth = select.width + 'px';
    }
    /**
     * @private
     * @param {?} parent
     * @param {?} select
     * @return {?}
     */
    _setOffset(parent, select) {
        /** @type {?} */
        const delta = select.height;
        if (this._currentPosition === 'top') {
            /** @type {?} */
            const offsetBottom = parent.bottom - select.bottom;
            this._dropdown.style.bottom = offsetBottom + delta + 'px';
            this._dropdown.style.top = 'auto';
        }
        else if (this._currentPosition === 'bottom') {
            /** @type {?} */
            const offsetTop = select.top - parent.top;
            this._dropdown.style.top = offsetTop + delta + 'px';
            this._dropdown.style.bottom = 'auto';
        }
    }
}
ng_select_ng_select_NgDropdownPanelComponent.decorators = [
    { type: core["n" /* Component */], args: [{
                changeDetection: core["j" /* ChangeDetectionStrategy */].OnPush,
                encapsulation: core["ob" /* ViewEncapsulation */].None,
                selector: 'ng-dropdown-panel',
                template: `
        <div *ngIf="headerTemplate" class="ng-dropdown-header">
            <ng-container [ngTemplateOutlet]="headerTemplate" [ngTemplateOutletContext]="{ searchTerm: filterValue }"></ng-container>
        </div>
        <div #scroll class="ng-dropdown-panel-items scroll-host">
            <div #padding [class.total-padding]="virtualScroll"></div>
            <div #content [class.scrollable-content]="virtualScroll && items.length">
                <ng-content></ng-content>
            </div>
        </div>
        <div *ngIf="footerTemplate" class="ng-dropdown-footer">
            <ng-container [ngTemplateOutlet]="footerTemplate" [ngTemplateOutletContext]="{ searchTerm: filterValue }"></ng-container>
        </div>
    `
            }] }
];
/** @nocollapse */
ng_select_ng_select_NgDropdownPanelComponent.ctorParameters = () => [
    { type: core["Y" /* Renderer2 */] },
    { type: core["P" /* NgZone */] },
    { type: NgDropdownPanelService },
    { type: core["u" /* ElementRef */] },
    { type: undefined, decorators: [{ type: core["Q" /* Optional */] }, { type: core["A" /* Inject */], args: [common["d" /* DOCUMENT */],] }] }
];
ng_select_ng_select_NgDropdownPanelComponent.propDecorators = {
    items: [{ type: core["E" /* Input */] }],
    markedItem: [{ type: core["E" /* Input */] }],
    position: [{ type: core["E" /* Input */] }],
    appendTo: [{ type: core["E" /* Input */] }],
    bufferAmount: [{ type: core["E" /* Input */] }],
    virtualScroll: [{ type: core["E" /* Input */] }],
    headerTemplate: [{ type: core["E" /* Input */] }],
    footerTemplate: [{ type: core["E" /* Input */] }],
    filterValue: [{ type: core["E" /* Input */] }],
    update: [{ type: core["R" /* Output */] }],
    scroll: [{ type: core["R" /* Output */] }],
    scrollToEnd: [{ type: core["R" /* Output */] }],
    outsideClick: [{ type: core["R" /* Output */] }],
    contentElementRef: [{ type: core["lb" /* ViewChild */], args: ['content', { read: core["u" /* ElementRef */], static: true },] }],
    scrollElementRef: [{ type: core["lb" /* ViewChild */], args: ['scroll', { read: core["u" /* ElementRef */], static: true },] }],
    paddingElementRef: [{ type: core["lb" /* ViewChild */], args: ['padding', { read: core["u" /* ElementRef */], static: true },] }],
    handleMousedown: [{ type: core["z" /* HostListener */], args: ['mousedown', ['$event'],] }]
};
if (false) {}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class ng_select_ng_select_NgOptionComponent {
    /**
     * @param {?} elementRef
     */
    constructor(elementRef) {
        this.elementRef = elementRef;
        this.stateChange$ = new Subject["a" /* Subject */]();
        this._disabled = false;
    }
    /**
     * @return {?}
     */
    get disabled() { return this._disabled; }
    /**
     * @param {?} value
     * @return {?}
     */
    set disabled(value) { this._disabled = this._isDisabled(value); }
    /**
     * @return {?}
     */
    get label() {
        return (this.elementRef.nativeElement.textContent || '').trim();
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    ngOnChanges(changes) {
        if (changes.disabled) {
            this.stateChange$.next({
                value: this.value,
                disabled: this._disabled
            });
        }
    }
    /**
     * @return {?}
     */
    ngAfterViewChecked() {
        if (this.label !== this._previousLabel) {
            this._previousLabel = this.label;
            this.stateChange$.next({
                value: this.value,
                disabled: this._disabled,
                label: this.elementRef.nativeElement.innerHTML
            });
        }
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        this.stateChange$.complete();
    }
    /**
     * @private
     * @param {?} value
     * @return {?}
     */
    _isDisabled(value) {
        return value != null && `${value}` !== 'false';
    }
}
ng_select_ng_select_NgOptionComponent.decorators = [
    { type: core["n" /* Component */], args: [{
                selector: 'ng-option',
                changeDetection: core["j" /* ChangeDetectionStrategy */].OnPush,
                template: `<ng-content></ng-content>`
            }] }
];
/** @nocollapse */
ng_select_ng_select_NgOptionComponent.ctorParameters = () => [
    { type: core["u" /* ElementRef */] }
];
ng_select_ng_select_NgOptionComponent.propDecorators = {
    value: [{ type: core["E" /* Input */] }],
    disabled: [{ type: core["E" /* Input */] }]
};
if (false) {}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NgSelectConfig {
    constructor() {
        this.notFoundText = 'No items found';
        this.typeToSearchText = 'Type to search';
        this.addTagText = 'Add item';
        this.loadingText = 'Loading...';
        this.clearAllText = 'Clear all';
        this.disableVirtualScroll = true;
        this.openOnEnter = true;
        this.appearance = 'underline';
    }
}
NgSelectConfig.decorators = [
    { type: core["B" /* Injectable */], args: [{ providedIn: 'root' },] }
];
/** @nocollapse */ NgSelectConfig.ngInjectableDef = Object(core["wc" /* ɵɵdefineInjectable */])({ factory: function NgSelectConfig_Factory() { return new NgSelectConfig(); }, token: NgSelectConfig, providedIn: "root" });
if (false) {}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
const SELECTION_MODEL_FACTORY = new core["C" /* InjectionToken */]('ng-select-selection-model');
class ng_select_ng_select_NgSelectComponent {
    /**
     * @param {?} classes
     * @param {?} autoFocus
     * @param {?} config
     * @param {?} newSelectionModel
     * @param {?} _elementRef
     * @param {?} _cd
     * @param {?} _console
     */
    constructor(classes, autoFocus, config, newSelectionModel, _elementRef, _cd, _console) {
        this.classes = classes;
        this.autoFocus = autoFocus;
        this._cd = _cd;
        this._console = _console;
        this.markFirst = true;
        this.dropdownPosition = 'auto';
        this.loading = false;
        this.closeOnSelect = true;
        this.hideSelected = false;
        this.selectOnTab = false;
        this.bufferAmount = 4;
        this.selectableGroup = false;
        this.selectableGroupAsModel = true;
        this.searchFn = null;
        this.trackByFn = null;
        this.clearOnBackspace = true;
        this.labelForId = null;
        this.inputAttrs = {};
        this.readonly = false;
        this.searchWhileComposing = true;
        this.minTermLength = 0;
        this.keyDownFn = (/**
         * @param {?} _
         * @return {?}
         */
        (_) => true);
        this.multiple = false;
        this.addTag = false;
        this.searchable = true;
        this.clearable = true;
        this.isOpen = false;
        // output events
        this.blurEvent = new core["w" /* EventEmitter */]();
        this.focusEvent = new core["w" /* EventEmitter */]();
        this.changeEvent = new core["w" /* EventEmitter */]();
        this.openEvent = new core["w" /* EventEmitter */]();
        this.closeEvent = new core["w" /* EventEmitter */]();
        this.searchEvent = new core["w" /* EventEmitter */]();
        this.clearEvent = new core["w" /* EventEmitter */]();
        this.addEvent = new core["w" /* EventEmitter */]();
        this.removeEvent = new core["w" /* EventEmitter */]();
        this.scroll = new core["w" /* EventEmitter */]();
        this.scrollToEnd = new core["w" /* EventEmitter */]();
        this.viewPortItems = [];
        this.searchTerm = null;
        this.dropdownId = newId();
        this.escapeHTML = true;
        this._items = [];
        this._defaultLabel = 'label';
        this._pressedKeys = [];
        this._isComposing = false;
        this._destroy$ = new Subject["a" /* Subject */]();
        this._keyPress$ = new Subject["a" /* Subject */]();
        this._onChange = (/**
         * @param {?} _
         * @return {?}
         */
        (_) => { });
        this._onTouched = (/**
         * @return {?}
         */
        () => { });
        this.clearItem = (/**
         * @param {?} item
         * @return {?}
         */
        (item) => {
            /** @type {?} */
            const option = this.selectedItems.find((/**
             * @param {?} x
             * @return {?}
             */
            x => x.value === item));
            this.unselect(option);
        });
        this.trackByOption = (/**
         * @param {?} _
         * @param {?} item
         * @return {?}
         */
        (_, item) => {
            if (this.trackByFn) {
                return this.trackByFn(item.value);
            }
            return item;
        });
        this._mergeGlobalConfig(config);
        this.itemsList = new ItemsList(this, newSelectionModel());
        this.element = _elementRef.nativeElement;
    }
    /**
     * @return {?}
     */
    get items() { return this._items; }
    ;
    /**
     * @param {?} value
     * @return {?}
     */
    set items(value) {
        this._itemsAreUsed = true;
        this._items = value;
    }
    ;
    /**
     * @return {?}
     */
    get compareWith() { return this._compareWith; }
    /**
     * @param {?} fn
     * @return {?}
     */
    set compareWith(fn) {
        if (!isFunction(fn)) {
            throw Error('`compareWith` must be a function.');
        }
        this._compareWith = fn;
    }
    /**
     * @return {?}
     */
    get clearSearchOnAdd() { return isDefined(this._clearSearchOnAdd) ? this._clearSearchOnAdd : this.closeOnSelect; }
    ;
    /**
     * @param {?} value
     * @return {?}
     */
    set clearSearchOnAdd(value) {
        this._clearSearchOnAdd = value;
    }
    ;
    /**
     * @return {?}
     */
    get disabled() { return this.readonly || this._disabled; }
    ;
    /**
     * @return {?}
     */
    get filtered() { return (!!this.searchTerm && this.searchable || this._isComposing); }
    ;
    /**
     * @return {?}
     */
    get selectedItems() {
        return this.itemsList.selectedItems;
    }
    /**
     * @return {?}
     */
    get selectedValues() {
        return this.selectedItems.map((/**
         * @param {?} x
         * @return {?}
         */
        x => x.value));
    }
    /**
     * @return {?}
     */
    get hasValue() {
        return this.selectedItems.length > 0;
    }
    /**
     * @return {?}
     */
    get currentPanelPosition() {
        if (this.dropdownPanel) {
            return this.dropdownPanel.currentPosition;
        }
        return undefined;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this._handleKeyPresses();
        this._setInputAttributes();
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    ngOnChanges(changes) {
        if (changes.multiple) {
            this.itemsList.clearSelected();
        }
        if (changes.items) {
            this._setItems(changes.items.currentValue || []);
        }
        if (changes.isOpen) {
            this._manualOpen = isDefined(changes.isOpen.currentValue);
        }
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        if (!this._itemsAreUsed) {
            this.escapeHTML = false;
            this._setItemsFromNgOptions();
        }
        if (isDefined(this.autoFocus)) {
            this.focus();
        }
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        this._destroy$.next();
        this._destroy$.complete();
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    handleKeyDown($event) {
        /** @type {?} */
        const keyCode = KeyCode[$event.which];
        if (keyCode) {
            if (this.keyDownFn($event) === false) {
                return;
            }
            this.handleKeyCode($event);
        }
        else if ($event.key && $event.key.length === 1) {
            this._keyPress$.next($event.key.toLocaleLowerCase());
        }
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    handleKeyCode($event) {
        switch ($event.which) {
            case KeyCode.ArrowDown:
                this._handleArrowDown($event);
                break;
            case KeyCode.ArrowUp:
                this._handleArrowUp($event);
                break;
            case KeyCode.Space:
                this._handleSpace($event);
                break;
            case KeyCode.Enter:
                this._handleEnter($event);
                break;
            case KeyCode.Tab:
                this._handleTab($event);
                break;
            case KeyCode.Esc:
                this.close();
                $event.preventDefault();
                break;
            case KeyCode.Backspace:
                this._handleBackspace();
                break;
        }
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    handleMousedown($event) {
        /** @type {?} */
        const target = (/** @type {?} */ ($event.target));
        if (target.tagName !== 'INPUT') {
            $event.preventDefault();
        }
        if (target.classList.contains('ng-clear-wrapper')) {
            this.handleClearClick();
            return;
        }
        if (target.classList.contains('ng-arrow-wrapper')) {
            this.handleArrowClick();
            return;
        }
        if (target.classList.contains('ng-value-icon')) {
            return;
        }
        if (!this.focused) {
            this.focus();
        }
        if (this.searchable) {
            this.open();
        }
        else {
            this.toggle();
        }
    }
    /**
     * @return {?}
     */
    handleArrowClick() {
        if (this.isOpen) {
            this.close();
        }
        else {
            this.open();
        }
    }
    /**
     * @return {?}
     */
    handleClearClick() {
        if (this.hasValue) {
            this.itemsList.clearSelected(true);
            this._updateNgModel();
        }
        this._clearSearch();
        this.focus();
        this.clearEvent.emit();
        this._onSelectionChanged();
    }
    /**
     * @return {?}
     */
    clearModel() {
        if (!this.clearable) {
            return;
        }
        this.itemsList.clearSelected();
        this._updateNgModel();
    }
    /**
     * @param {?} value
     * @return {?}
     */
    writeValue(value) {
        this.itemsList.clearSelected();
        this._handleWriteValue(value);
        this._cd.markForCheck();
    }
    /**
     * @param {?} fn
     * @return {?}
     */
    registerOnChange(fn) {
        this._onChange = fn;
    }
    /**
     * @param {?} fn
     * @return {?}
     */
    registerOnTouched(fn) {
        this._onTouched = fn;
    }
    /**
     * @param {?} state
     * @return {?}
     */
    setDisabledState(state) {
        this._disabled = state;
        this._cd.markForCheck();
    }
    /**
     * @return {?}
     */
    toggle() {
        if (!this.isOpen) {
            this.open();
        }
        else {
            this.close();
        }
    }
    /**
     * @return {?}
     */
    open() {
        if (this.disabled || this.isOpen || this.itemsList.maxItemsSelected || this._manualOpen) {
            return;
        }
        if (!this._isTypeahead && !this.addTag && this.itemsList.noItemsToSelect) {
            return;
        }
        this.isOpen = true;
        this.itemsList.markSelectedOrDefault(this.markFirst);
        this.openEvent.emit();
        if (!this.searchTerm) {
            this.focus();
        }
        this.detectChanges();
    }
    /**
     * @return {?}
     */
    close() {
        if (!this.isOpen || this._manualOpen) {
            return;
        }
        this.isOpen = false;
        this._clearSearch();
        this.itemsList.unmarkItem();
        this._onTouched();
        this.closeEvent.emit();
        this._cd.markForCheck();
    }
    /**
     * @param {?} item
     * @return {?}
     */
    toggleItem(item) {
        if (!item || item.disabled || this.disabled) {
            return;
        }
        if (this.multiple && item.selected) {
            this.unselect(item);
        }
        else {
            this.select(item);
        }
        this._onSelectionChanged();
    }
    /**
     * @param {?} item
     * @return {?}
     */
    select(item) {
        if (!item.selected) {
            this.itemsList.select(item);
            if (this.clearSearchOnAdd) {
                this._clearSearch();
            }
            this._updateNgModel();
            if (this.multiple) {
                this.addEvent.emit(item.value);
            }
        }
        if (this.closeOnSelect || this.itemsList.noItemsToSelect) {
            this.close();
        }
    }
    /**
     * @return {?}
     */
    focus() {
        this.searchInput.nativeElement.focus();
    }
    /**
     * @return {?}
     */
    blur() {
        this.searchInput.nativeElement.blur();
    }
    /**
     * @param {?} item
     * @return {?}
     */
    unselect(item) {
        if (!item) {
            return;
        }
        this.itemsList.unselect(item);
        this.focus();
        this._updateNgModel();
        this.removeEvent.emit(item);
    }
    /**
     * @return {?}
     */
    selectTag() {
        /** @type {?} */
        let tag;
        if (isFunction(this.addTag)) {
            tag = ((/** @type {?} */ (this.addTag)))(this.searchTerm);
        }
        else {
            tag = this._primitive ? this.searchTerm : { [this.bindLabel]: this.searchTerm };
        }
        /** @type {?} */
        const handleTag = (/**
         * @param {?} item
         * @return {?}
         */
        (item) => this._isTypeahead || !this.isOpen ? this.itemsList.mapItem(item, null) : this.itemsList.addItem(item));
        if (isPromise(tag)) {
            tag.then((/**
             * @param {?} item
             * @return {?}
             */
            item => this.select(handleTag(item)))).catch((/**
             * @return {?}
             */
            () => { }));
        }
        else if (tag) {
            this.select(handleTag(tag));
        }
    }
    /**
     * @return {?}
     */
    showClear() {
        return this.clearable && (this.hasValue || this.searchTerm) && !this.disabled;
    }
    /**
     * @return {?}
     */
    get showAddTag() {
        if (!this._validTerm) {
            return false;
        }
        /** @type {?} */
        const term = this.searchTerm.toLowerCase().trim();
        return this.addTag &&
            (!this.itemsList.filteredItems.some((/**
             * @param {?} x
             * @return {?}
             */
            x => x.label.toLowerCase() === term)) &&
                (!this.hideSelected && this.isOpen || !this.selectedItems.some((/**
                 * @param {?} x
                 * @return {?}
                 */
                x => x.label.toLowerCase() === term)))) &&
            !this.loading;
    }
    /**
     * @return {?}
     */
    showNoItemsFound() {
        /** @type {?} */
        const empty = this.itemsList.filteredItems.length === 0;
        return ((empty && !this._isTypeahead && !this.loading) ||
            (empty && this._isTypeahead && this._validTerm && !this.loading)) &&
            !this.showAddTag;
    }
    /**
     * @return {?}
     */
    showTypeToSearch() {
        /** @type {?} */
        const empty = this.itemsList.filteredItems.length === 0;
        return empty && this._isTypeahead && !this._validTerm && !this.loading;
    }
    /**
     * @return {?}
     */
    onCompositionStart() {
        this._isComposing = true;
    }
    /**
     * @param {?} term
     * @return {?}
     */
    onCompositionEnd(term) {
        if (this.searchWhileComposing) {
            return;
        }
        this._isComposing = false;
        this.filter(term);
    }
    /**
     * @param {?} term
     * @return {?}
     */
    filter(term) {
        if (this._isComposing && !this.searchWhileComposing) {
            return;
        }
        this.searchTerm = term;
        if (this._isTypeahead && this._validTerm) {
            this.typeahead.next(term);
        }
        if (!this._isTypeahead) {
            this.itemsList.filter(this.searchTerm);
            if (this.isOpen) {
                this.itemsList.markSelectedOrDefault(this.markFirst);
            }
        }
        this.searchEvent.emit({ term, items: this.itemsList.filteredItems.map((/**
             * @param {?} x
             * @return {?}
             */
            x => x.value)) });
        this.open();
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    onInputFocus($event) {
        if (this.focused) {
            return;
        }
        this.element.classList.add('ng-select-focused');
        this.focusEvent.emit($event);
        this.focused = true;
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    onInputBlur($event) {
        this.element.classList.remove('ng-select-focused');
        this.blurEvent.emit($event);
        if (!this.isOpen && !this.disabled) {
            this._onTouched();
        }
        this.focused = false;
    }
    /**
     * @param {?} item
     * @return {?}
     */
    onItemHover(item) {
        if (item.disabled) {
            return;
        }
        this.itemsList.markItem(item);
    }
    /**
     * @return {?}
     */
    detectChanges() {
        if (!((/** @type {?} */ (this._cd))).destroyed) {
            this._cd.detectChanges();
        }
    }
    /**
     * @private
     * @param {?} items
     * @return {?}
     */
    _setItems(items) {
        /** @type {?} */
        const firstItem = items[0];
        this.bindLabel = this.bindLabel || this._defaultLabel;
        this._primitive = isDefined(firstItem) ? !isObject(firstItem) : this._primitive || this.bindLabel === this._defaultLabel;
        this.itemsList.setItems(items);
        if (items.length > 0 && this.hasValue) {
            this.itemsList.mapSelectedItems();
        }
        if (this.isOpen && isDefined(this.searchTerm) && !this._isTypeahead) {
            this.itemsList.filter(this.searchTerm);
        }
        if (this._isTypeahead || this.isOpen) {
            this.itemsList.markSelectedOrDefault(this.markFirst);
        }
    }
    /**
     * @private
     * @return {?}
     */
    _setItemsFromNgOptions() {
        /** @type {?} */
        const mapNgOptions = (/**
         * @param {?} options
         * @return {?}
         */
        (options) => {
            this.items = options.map((/**
             * @param {?} option
             * @return {?}
             */
            option => ({
                $ngOptionValue: option.value,
                $ngOptionLabel: option.elementRef.nativeElement.innerHTML,
                disabled: option.disabled
            })));
            this.itemsList.setItems(this.items);
            if (this.hasValue) {
                this.itemsList.mapSelectedItems();
            }
            this.detectChanges();
        });
        /** @type {?} */
        const handleOptionChange = (/**
         * @return {?}
         */
        () => {
            /** @type {?} */
            const changedOrDestroyed = Object(merge["a" /* merge */])(this.ngOptions.changes, this._destroy$);
            Object(merge["a" /* merge */])(...this.ngOptions.map((/**
             * @param {?} option
             * @return {?}
             */
            option => option.stateChange$)))
                .pipe(Object(takeUntil["a" /* takeUntil */])(changedOrDestroyed))
                .subscribe((/**
             * @param {?} option
             * @return {?}
             */
            option => {
                /** @type {?} */
                const item = this.itemsList.findItem(option.value);
                item.disabled = option.disabled;
                item.label = option.label || item.label;
                this._cd.detectChanges();
            }));
        });
        this.ngOptions.changes
            .pipe(Object(startWith["a" /* startWith */])(this.ngOptions), Object(takeUntil["a" /* takeUntil */])(this._destroy$))
            .subscribe((/**
         * @param {?} options
         * @return {?}
         */
        options => {
            this.bindLabel = this._defaultLabel;
            mapNgOptions(options);
            handleOptionChange();
        }));
    }
    /**
     * @private
     * @param {?} value
     * @return {?}
     */
    _isValidWriteValue(value) {
        if (!isDefined(value) || (this.multiple && value === '') || Array.isArray(value) && value.length === 0) {
            return false;
        }
        /** @type {?} */
        const validateBinding = (/**
         * @param {?} item
         * @return {?}
         */
        (item) => {
            if (!isDefined(this.compareWith) && isObject(item) && this.bindValue) {
                this._console.warn(`Binding object(${JSON.stringify(item)}) with bindValue is not allowed.`);
                return false;
            }
            return true;
        });
        if (this.multiple) {
            if (!Array.isArray(value)) {
                this._console.warn('Multiple select ngModel should be array.');
                return false;
            }
            return value.every((/**
             * @param {?} item
             * @return {?}
             */
            item => validateBinding(item)));
        }
        else {
            return validateBinding(value);
        }
    }
    /**
     * @private
     * @param {?} ngModel
     * @return {?}
     */
    _handleWriteValue(ngModel) {
        if (!this._isValidWriteValue(ngModel)) {
            return;
        }
        /** @type {?} */
        const select = (/**
         * @param {?} val
         * @return {?}
         */
        (val) => {
            /** @type {?} */
            let item = this.itemsList.findItem(val);
            if (item) {
                this.itemsList.select(item);
            }
            else {
                /** @type {?} */
                const isValObject = isObject(val);
                /** @type {?} */
                const isPrimitive = !isValObject && !this.bindValue;
                if ((isValObject || isPrimitive)) {
                    this.itemsList.select(this.itemsList.mapItem(val, null));
                }
                else if (this.bindValue) {
                    item = {
                        [this.bindLabel]: null,
                        [this.bindValue]: val
                    };
                    this.itemsList.select(this.itemsList.mapItem(item, null));
                }
            }
        });
        if (this.multiple) {
            ((/** @type {?} */ (ngModel))).forEach((/**
             * @param {?} item
             * @return {?}
             */
            item => select(item)));
        }
        else {
            select(ngModel);
        }
    }
    /**
     * @private
     * @return {?}
     */
    _handleKeyPresses() {
        if (this.searchable) {
            return;
        }
        this._keyPress$
            .pipe(Object(takeUntil["a" /* takeUntil */])(this._destroy$), Object(tap["a" /* tap */])((/**
         * @param {?} letter
         * @return {?}
         */
        letter => this._pressedKeys.push(letter))), Object(debounceTime["a" /* debounceTime */])(200), Object(filter["a" /* filter */])((/**
         * @return {?}
         */
        () => this._pressedKeys.length > 0)), Object(map["a" /* map */])((/**
         * @return {?}
         */
        () => this._pressedKeys.join(''))))
            .subscribe((/**
         * @param {?} term
         * @return {?}
         */
        term => {
            /** @type {?} */
            const item = this.itemsList.findByLabel(term);
            if (item) {
                if (this.isOpen) {
                    this.itemsList.markItem(item);
                    this._cd.markForCheck();
                }
                else {
                    this.select(item);
                }
            }
            this._pressedKeys = [];
        }));
    }
    /**
     * @private
     * @return {?}
     */
    _setInputAttributes() {
        /** @type {?} */
        const input = this.searchInput.nativeElement;
        /** @type {?} */
        const attributes = Object.assign({ type: 'text', autocorrect: 'off', autocapitalize: 'off', autocomplete: this.labelForId ? 'off' : this.dropdownId }, this.inputAttrs);
        for (const key of Object.keys(attributes)) {
            input.setAttribute(key, attributes[key]);
        }
    }
    /**
     * @private
     * @return {?}
     */
    _updateNgModel() {
        /** @type {?} */
        const model = [];
        for (const item of this.selectedItems) {
            if (this.bindValue) {
                /** @type {?} */
                let value = null;
                if (item.children) {
                    /** @type {?} */
                    const groupKey = this.groupValue ? this.bindValue : (/** @type {?} */ (this.groupBy));
                    value = item.value[groupKey || (/** @type {?} */ (this.groupBy))];
                }
                else {
                    value = this.itemsList.resolveNested(item.value, this.bindValue);
                }
                model.push(value);
            }
            else {
                model.push(item.value);
            }
        }
        /** @type {?} */
        const selected = this.selectedItems.map((/**
         * @param {?} x
         * @return {?}
         */
        x => x.value));
        if (this.multiple) {
            this._onChange(model);
            this.changeEvent.emit(selected);
        }
        else {
            this._onChange(isDefined(model[0]) ? model[0] : null);
            this.changeEvent.emit(selected[0]);
        }
        this._cd.markForCheck();
    }
    /**
     * @private
     * @return {?}
     */
    _clearSearch() {
        if (!this.searchTerm) {
            return;
        }
        this._changeSearch(null);
        this.itemsList.resetFilteredItems();
    }
    /**
     * @private
     * @param {?} searchTerm
     * @return {?}
     */
    _changeSearch(searchTerm) {
        this.searchTerm = searchTerm;
        if (this._isTypeahead) {
            this.typeahead.next(searchTerm);
        }
    }
    /**
     * @private
     * @return {?}
     */
    _scrollToMarked() {
        if (!this.isOpen || !this.dropdownPanel) {
            return;
        }
        this.dropdownPanel.scrollTo(this.itemsList.markedItem);
    }
    /**
     * @private
     * @return {?}
     */
    _scrollToTag() {
        if (!this.isOpen || !this.dropdownPanel) {
            return;
        }
        this.dropdownPanel.scrollToTag();
    }
    /**
     * @private
     * @return {?}
     */
    _onSelectionChanged() {
        if (this.isOpen && this.multiple && this.appendTo) {
            // Make sure items are rendered.
            this._cd.detectChanges();
            this.dropdownPanel.adjustPosition();
        }
    }
    /**
     * @private
     * @param {?} $event
     * @return {?}
     */
    _handleTab($event) {
        if (this.isOpen === false && !this.addTag) {
            return;
        }
        if (this.selectOnTab) {
            if (this.itemsList.markedItem) {
                this.toggleItem(this.itemsList.markedItem);
                $event.preventDefault();
            }
            else if (this.showAddTag) {
                this.selectTag();
                $event.preventDefault();
            }
            else {
                this.close();
            }
        }
        else {
            this.close();
        }
    }
    /**
     * @private
     * @param {?} $event
     * @return {?}
     */
    _handleEnter($event) {
        if (this.isOpen || this._manualOpen) {
            if (this.itemsList.markedItem) {
                this.toggleItem(this.itemsList.markedItem);
            }
            else if (this.showAddTag) {
                this.selectTag();
            }
        }
        else if (this.openOnEnter) {
            this.open();
        }
        else {
            return;
        }
        $event.preventDefault();
    }
    /**
     * @private
     * @param {?} $event
     * @return {?}
     */
    _handleSpace($event) {
        if (this.isOpen || this._manualOpen) {
            return;
        }
        this.open();
        $event.preventDefault();
    }
    /**
     * @private
     * @param {?} $event
     * @return {?}
     */
    _handleArrowDown($event) {
        if (this._nextItemIsTag(+1)) {
            this.itemsList.unmarkItem();
            this._scrollToTag();
        }
        else {
            this.itemsList.markNextItem();
            this._scrollToMarked();
        }
        this.open();
        $event.preventDefault();
    }
    /**
     * @private
     * @param {?} $event
     * @return {?}
     */
    _handleArrowUp($event) {
        if (!this.isOpen) {
            return;
        }
        if (this._nextItemIsTag(-1)) {
            this.itemsList.unmarkItem();
            this._scrollToTag();
        }
        else {
            this.itemsList.markPreviousItem();
            this._scrollToMarked();
        }
        $event.preventDefault();
    }
    /**
     * @private
     * @param {?} nextStep
     * @return {?}
     */
    _nextItemIsTag(nextStep) {
        /** @type {?} */
        const nextIndex = this.itemsList.markedIndex + nextStep;
        return this.addTag && this.searchTerm
            && this.itemsList.markedItem
            && (nextIndex < 0 || nextIndex === this.itemsList.filteredItems.length);
    }
    /**
     * @private
     * @return {?}
     */
    _handleBackspace() {
        if (this.searchTerm || !this.clearable || !this.clearOnBackspace || !this.hasValue) {
            return;
        }
        if (this.multiple) {
            this.unselect(this.itemsList.lastSelectedItem);
        }
        else {
            this.clearModel();
        }
    }
    /**
     * @private
     * @return {?}
     */
    get _isTypeahead() {
        return this.typeahead && this.typeahead.observers.length > 0;
    }
    /**
     * @private
     * @return {?}
     */
    get _validTerm() {
        /** @type {?} */
        const term = this.searchTerm && this.searchTerm.trim();
        return term && term.length >= this.minTermLength;
    }
    /**
     * @private
     * @param {?} config
     * @return {?}
     */
    _mergeGlobalConfig(config) {
        this.placeholder = this.placeholder || config.placeholder;
        this.notFoundText = this.notFoundText || config.notFoundText;
        this.typeToSearchText = this.typeToSearchText || config.typeToSearchText;
        this.addTagText = this.addTagText || config.addTagText;
        this.loadingText = this.loadingText || config.loadingText;
        this.clearAllText = this.clearAllText || config.clearAllText;
        this.virtualScroll = isDefined(this.virtualScroll)
            ? this.virtualScroll
            : isDefined(config.disableVirtualScroll) ? !config.disableVirtualScroll : false;
        this.openOnEnter = isDefined(this.openOnEnter) ? this.openOnEnter : config.openOnEnter;
        this.appendTo = this.appendTo || config.appendTo;
        this.bindValue = this.bindValue || config.bindValue;
        this.appearance = this.appearance || config.appearance;
    }
}
ng_select_ng_select_NgSelectComponent.decorators = [
    { type: core["n" /* Component */], args: [{
                selector: 'ng-select',
                template: "<div (mousedown)=\"handleMousedown($event)\" [class.ng-has-value]=\"hasValue\" class=\"ng-select-container ng-appearance-{{appearance}}\">\n    <div class=\"ng-value-container\">\n        <div class=\"ng-placeholder\">{{placeholder}}</div>\n\n        <ng-container *ngIf=\"!multiLabelTemplate && selectedItems.length > 0\">\n            <div [class.ng-value-disabled]=\"item.disabled\" class=\"ng-value\" *ngFor=\"let item of selectedItems; trackBy: trackByOption\">\n                <ng-template #defaultLabelTemplate>\n                    <span class=\"ng-value-icon left\" (click)=\"unselect(item);\" aria-hidden=\"true\">\u00D7</span>\n                    <span class=\"ng-value-label\" [ngItemLabel]=\"item.label\" [escape]=\"escapeHTML\"></span>\n                </ng-template>\n\n                <ng-template\n                    [ngTemplateOutlet]=\"labelTemplate || defaultLabelTemplate\"\n                    [ngTemplateOutletContext]=\"{ item: item.value, clear: clearItem, label: item.label }\">\n                </ng-template>\n            </div>\n        </ng-container>\n\n        <ng-template *ngIf=\"multiLabelTemplate && selectedValues.length > 0\"\n                [ngTemplateOutlet]=\"multiLabelTemplate\"\n                [ngTemplateOutletContext]=\"{ items: selectedValues, clear: clearItem }\">\n        </ng-template>\n\n        <div class=\"ng-input\">\n            <input #searchInput\n                   [attr.id]=\"labelForId\"\n                   [attr.tabindex]=\"tabIndex\"\n                   [readOnly]=\"!searchable || itemsList.maxItemsSelected\"\n                   [disabled]=\"disabled\"\n                   [value]=\"searchTerm ? searchTerm : ''\"\n                   (input)=\"filter(searchInput.value)\"\n                   (compositionstart)=\"onCompositionStart()\"\n                   (compositionend)=\"onCompositionEnd(searchInput.value)\"\n                   (focus)=\"onInputFocus($event)\"\n                   (blur)=\"onInputBlur($event)\"\n                   (change)=\"$event.stopPropagation()\"\n                   role=\"combobox\"\n                   [attr.aria-expanded]=\"isOpen\"\n                   [attr.aria-owns]=\"isOpen ? dropdownId : null\"\n                   [attr.aria-activedescendant]=\"isOpen ? itemsList?.markedItem?.htmlId : null\">\n        </div>\n    </div>\n\n    <ng-container *ngIf=\"loading\">\n        <ng-template #defaultLoadingSpinnerTemplate>\n            <div class=\"ng-spinner-loader\"></div>\n        </ng-template>\n\n        <ng-template\n            [ngTemplateOutlet]=\"loadingSpinnerTemplate || defaultLoadingSpinnerTemplate\">\n        </ng-template>\n    </ng-container>\n\n    <span *ngIf=\"showClear()\" class=\"ng-clear-wrapper\" title=\"{{clearAllText}}\">\n        <span class=\"ng-clear\" aria-hidden=\"true\">\u00D7</span>\n    </span>\n\n    <span class=\"ng-arrow-wrapper\">\n        <span class=\"ng-arrow\"></span>\n    </span>\n</div>\n\n<ng-dropdown-panel *ngIf=\"isOpen\"\n                   class=\"ng-dropdown-panel\"\n                   [virtualScroll]=\"virtualScroll\"\n                   [bufferAmount]=\"bufferAmount\"\n                   [appendTo]=\"appendTo\"\n                   [position]=\"dropdownPosition\"\n                   [headerTemplate]=\"headerTemplate\"\n                   [footerTemplate]=\"footerTemplate\"\n                   [filterValue]=\"searchTerm\"\n                   [items]=\"itemsList.filteredItems\"\n                   [markedItem]=\"itemsList.markedItem\"\n                   (update)=\"viewPortItems = $event\"\n                   (scroll)=\"scroll.emit($event)\"\n                   (scrollToEnd)=\"scrollToEnd.emit($event)\"\n                   (outsideClick)=\"close()\"\n                   [class.ng-select-multiple]=\"multiple\"\n                   [ngClass]=\"appendTo ? classes : null\"\n                   [id]=\"dropdownId\">\n\n    <ng-container>\n        <div class=\"ng-option\" [attr.role]=\"item.children ? 'group' : 'option'\" (click)=\"toggleItem(item)\" (mouseover)=\"onItemHover(item)\"\n                *ngFor=\"let item of viewPortItems; trackBy: trackByOption\"\n                [class.ng-option-disabled]=\"item.disabled\"\n                [class.ng-option-selected]=\"item.selected\"\n                [class.ng-optgroup]=\"item.children\"\n                [class.ng-option]=\"!item.children\"\n                [class.ng-option-child]=\"!!item.parent\"\n                [class.ng-option-marked]=\"item === itemsList.markedItem\"\n                [attr.aria-selected]=\"item.selected\"\n                [attr.id]=\"item?.htmlId\">\n\n            <ng-template #defaultOptionTemplate>\n                <span class=\"ng-option-label\" [ngItemLabel]=\"item.label\" [escape]=\"escapeHTML\"></span>\n            </ng-template>\n\n            <ng-template\n                [ngTemplateOutlet]=\"item.children ? (optgroupTemplate || defaultOptionTemplate) : (optionTemplate || defaultOptionTemplate)\"\n                [ngTemplateOutletContext]=\"{ item: item.value, item$:item, index: item.index, searchTerm: searchTerm }\">\n            </ng-template>\n        </div>\n\n        <div class=\"ng-option\" [class.ng-option-marked]=\"!itemsList.markedItem\" (mouseover)=\"itemsList.unmarkItem()\" role=\"option\" (click)=\"selectTag()\" *ngIf=\"showAddTag\">\n            <ng-template #defaultTagTemplate>\n                <span><span class=\"ng-tag-label\">{{addTagText}}</span>\"{{searchTerm}}\"</span>\n            </ng-template>\n\n            <ng-template\n                [ngTemplateOutlet]=\"tagTemplate || defaultTagTemplate\"\n                [ngTemplateOutletContext]=\"{ searchTerm: searchTerm }\">\n            </ng-template>\n        </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"showNoItemsFound()\">\n        <ng-template #defaultNotFoundTemplate>\n            <div class=\"ng-option ng-option-disabled\">{{notFoundText}}</div>\n        </ng-template>\n\n        <ng-template\n            [ngTemplateOutlet]=\"notFoundTemplate || defaultNotFoundTemplate\"\n            [ngTemplateOutletContext]=\"{ searchTerm: searchTerm }\">\n        </ng-template>\n    </ng-container>\n\n    <ng-container *ngIf=\"showTypeToSearch()\">\n        <ng-template #defaultTypeToSearchTemplate>\n            <div class=\"ng-option ng-option-disabled\">{{typeToSearchText}}</div>\n        </ng-template>\n\n        <ng-template\n            [ngTemplateOutlet]=\"typeToSearchTemplate || defaultTypeToSearchTemplate\">\n        </ng-template>\n    </ng-container>\n\n    <ng-container *ngIf=\"loading && itemsList.filteredItems.length === 0\">\n        <ng-template #defaultLoadingTextTemplate>\n            <div class=\"ng-option ng-option-disabled\">{{loadingText}}</div>\n        </ng-template>\n\n        <ng-template\n            [ngTemplateOutlet]=\"loadingTextTemplate || defaultLoadingTextTemplate\"\n            [ngTemplateOutletContext]=\"{ searchTerm: searchTerm }\">\n        </ng-template>\n    </ng-container>\n\n</ng-dropdown-panel>\n",
                providers: [{
                        provide: fesm2015_forms["n" /* NG_VALUE_ACCESSOR */],
                        useExisting: Object(core["tb" /* forwardRef */])((/**
                         * @return {?}
                         */
                        () => ng_select_ng_select_NgSelectComponent)),
                        multi: true
                    }, NgDropdownPanelService],
                encapsulation: core["ob" /* ViewEncapsulation */].None,
                changeDetection: core["j" /* ChangeDetectionStrategy */].OnPush,
                host: {
                    'role': 'listbox',
                    'class': 'ng-select',
                    '[class.ng-select-single]': '!multiple',
                },
                styles: [".ng-select{position:relative;display:block;box-sizing:border-box}.ng-select div,.ng-select input,.ng-select span{box-sizing:border-box}.ng-select [hidden]{display:none}.ng-select.ng-select-searchable .ng-select-container .ng-value-container .ng-input{opacity:1}.ng-select.ng-select-opened .ng-select-container{z-index:1001}.ng-select.ng-select-disabled .ng-select-container .ng-value-container .ng-placeholder,.ng-select.ng-select-disabled .ng-select-container .ng-value-container .ng-value{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.ng-select.ng-select-disabled .ng-arrow-wrapper{cursor:default}.ng-select.ng-select-filtered .ng-placeholder{display:none}.ng-select .ng-select-container{color:#333;cursor:default;display:-webkit-box;display:flex;outline:0;overflow:hidden;position:relative;width:100%}.ng-select .ng-select-container .ng-value-container{display:-webkit-box;display:flex;-webkit-box-flex:1;flex:1}.ng-select .ng-select-container .ng-value-container .ng-input{opacity:0}.ng-select .ng-select-container .ng-value-container .ng-input>input{box-sizing:content-box;background:none;border:0;box-shadow:none;outline:0;cursor:default;width:100%}.ng-select .ng-select-container .ng-value-container .ng-input>input::-ms-clear{display:none}.ng-select .ng-select-container .ng-value-container .ng-input>input[readonly]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:0;padding:0}.ng-select.ng-select-single.ng-select-filtered .ng-select-container .ng-value-container .ng-value{visibility:hidden}.ng-select.ng-select-single .ng-select-container .ng-value-container,.ng-select.ng-select-single .ng-select-container .ng-value-container .ng-value{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.ng-select.ng-select-single .ng-select-container .ng-value-container .ng-value .ng-value-icon{display:none}.ng-select.ng-select-single .ng-select-container .ng-value-container .ng-input{position:absolute;left:0;width:100%}.ng-select.ng-select-multiple.ng-select-disabled>.ng-select-container .ng-value-container .ng-value .ng-value-icon{display:none}.ng-select.ng-select-multiple .ng-select-container .ng-value-container{flex-wrap:wrap}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value{white-space:nowrap}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value.ng-value-disabled .ng-value-icon{display:none}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value .ng-value-icon{cursor:pointer}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-input{-webkit-box-flex:1;flex:1;z-index:2}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-placeholder{position:absolute;z-index:1}.ng-select .ng-clear-wrapper{cursor:pointer;position:relative;width:17px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.ng-select .ng-clear-wrapper .ng-clear{display:inline-block;font-size:18px;line-height:1;pointer-events:none}.ng-select .ng-spinner-loader{border-radius:50%;width:17px;height:17px;margin-right:5px;font-size:10px;position:relative;text-indent:-9999em;border-top:2px solid rgba(66,66,66,.2);border-right:2px solid rgba(66,66,66,.2);border-bottom:2px solid rgba(66,66,66,.2);border-left:2px solid #424242;-webkit-transform:translateZ(0);transform:translateZ(0);-webkit-animation:.8s linear infinite load8;animation:.8s linear infinite load8}.ng-select .ng-spinner-loader:after{border-radius:50%;width:17px;height:17px}@-webkit-keyframes load8{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes load8{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}.ng-select .ng-arrow-wrapper{cursor:pointer;position:relative;text-align:center;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.ng-select .ng-arrow-wrapper .ng-arrow{pointer-events:none;display:inline-block;height:0;width:0;position:relative}.ng-dropdown-panel{box-sizing:border-box;position:absolute;opacity:0;width:100%;z-index:1050;-webkit-overflow-scrolling:touch}.ng-dropdown-panel .ng-dropdown-panel-items{display:block;height:auto;box-sizing:border-box;max-height:240px;overflow-y:auto}.ng-dropdown-panel .ng-dropdown-panel-items .ng-optgroup{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.ng-dropdown-panel .ng-dropdown-panel-items .ng-option{box-sizing:border-box;cursor:pointer;display:block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.ng-dropdown-panel .ng-dropdown-panel-items .ng-option .highlighted{font-weight:700;text-decoration:underline}.ng-dropdown-panel .ng-dropdown-panel-items .ng-option.disabled{cursor:default}.ng-dropdown-panel .scroll-host{overflow:hidden;overflow-y:auto;position:relative;display:block;-webkit-overflow-scrolling:touch}.ng-dropdown-panel .scrollable-content{top:0;left:0;width:100%;height:100%;position:absolute}.ng-dropdown-panel .total-padding{width:1px;opacity:0}"]
            }] }
];
/** @nocollapse */
ng_select_ng_select_NgSelectComponent.ctorParameters = () => [
    { type: String, decorators: [{ type: core["h" /* Attribute */], args: ['class',] }] },
    { type: undefined, decorators: [{ type: core["h" /* Attribute */], args: ['autofocus',] }] },
    { type: NgSelectConfig },
    { type: undefined, decorators: [{ type: core["A" /* Inject */], args: [SELECTION_MODEL_FACTORY,] }] },
    { type: core["u" /* ElementRef */] },
    { type: core["k" /* ChangeDetectorRef */] },
    { type: ConsoleService }
];
ng_select_ng_select_NgSelectComponent.propDecorators = {
    bindLabel: [{ type: core["E" /* Input */] }],
    bindValue: [{ type: core["E" /* Input */] }],
    markFirst: [{ type: core["E" /* Input */] }],
    placeholder: [{ type: core["E" /* Input */] }],
    notFoundText: [{ type: core["E" /* Input */] }],
    typeToSearchText: [{ type: core["E" /* Input */] }],
    addTagText: [{ type: core["E" /* Input */] }],
    loadingText: [{ type: core["E" /* Input */] }],
    clearAllText: [{ type: core["E" /* Input */] }],
    appearance: [{ type: core["E" /* Input */] }],
    dropdownPosition: [{ type: core["E" /* Input */] }],
    appendTo: [{ type: core["E" /* Input */] }],
    loading: [{ type: core["E" /* Input */] }],
    closeOnSelect: [{ type: core["E" /* Input */] }],
    hideSelected: [{ type: core["E" /* Input */] }],
    selectOnTab: [{ type: core["E" /* Input */] }],
    openOnEnter: [{ type: core["E" /* Input */] }],
    maxSelectedItems: [{ type: core["E" /* Input */] }],
    groupBy: [{ type: core["E" /* Input */] }],
    groupValue: [{ type: core["E" /* Input */] }],
    bufferAmount: [{ type: core["E" /* Input */] }],
    virtualScroll: [{ type: core["E" /* Input */] }],
    selectableGroup: [{ type: core["E" /* Input */] }],
    selectableGroupAsModel: [{ type: core["E" /* Input */] }],
    searchFn: [{ type: core["E" /* Input */] }],
    trackByFn: [{ type: core["E" /* Input */] }],
    clearOnBackspace: [{ type: core["E" /* Input */] }],
    labelForId: [{ type: core["E" /* Input */] }],
    inputAttrs: [{ type: core["E" /* Input */] }],
    tabIndex: [{ type: core["E" /* Input */] }],
    readonly: [{ type: core["E" /* Input */] }],
    searchWhileComposing: [{ type: core["E" /* Input */] }],
    minTermLength: [{ type: core["E" /* Input */] }],
    keyDownFn: [{ type: core["E" /* Input */] }],
    typeahead: [{ type: core["E" /* Input */] }, { type: core["y" /* HostBinding */], args: ['class.ng-select-typeahead',] }],
    multiple: [{ type: core["E" /* Input */] }, { type: core["y" /* HostBinding */], args: ['class.ng-select-multiple',] }],
    addTag: [{ type: core["E" /* Input */] }, { type: core["y" /* HostBinding */], args: ['class.ng-select-taggable',] }],
    searchable: [{ type: core["E" /* Input */] }, { type: core["y" /* HostBinding */], args: ['class.ng-select-searchable',] }],
    clearable: [{ type: core["E" /* Input */] }, { type: core["y" /* HostBinding */], args: ['class.ng-select-clearable',] }],
    isOpen: [{ type: core["E" /* Input */] }, { type: core["y" /* HostBinding */], args: ['class.ng-select-opened',] }],
    items: [{ type: core["E" /* Input */] }],
    compareWith: [{ type: core["E" /* Input */] }],
    clearSearchOnAdd: [{ type: core["E" /* Input */] }],
    blurEvent: [{ type: core["R" /* Output */], args: ['blur',] }],
    focusEvent: [{ type: core["R" /* Output */], args: ['focus',] }],
    changeEvent: [{ type: core["R" /* Output */], args: ['change',] }],
    openEvent: [{ type: core["R" /* Output */], args: ['open',] }],
    closeEvent: [{ type: core["R" /* Output */], args: ['close',] }],
    searchEvent: [{ type: core["R" /* Output */], args: ['search',] }],
    clearEvent: [{ type: core["R" /* Output */], args: ['clear',] }],
    addEvent: [{ type: core["R" /* Output */], args: ['add',] }],
    removeEvent: [{ type: core["R" /* Output */], args: ['remove',] }],
    scroll: [{ type: core["R" /* Output */], args: ['scroll',] }],
    scrollToEnd: [{ type: core["R" /* Output */], args: ['scrollToEnd',] }],
    optionTemplate: [{ type: core["r" /* ContentChild */], args: [NgOptionTemplateDirective, { read: core["ib" /* TemplateRef */], static: false },] }],
    optgroupTemplate: [{ type: core["r" /* ContentChild */], args: [NgOptgroupTemplateDirective, { read: core["ib" /* TemplateRef */], static: false },] }],
    labelTemplate: [{ type: core["r" /* ContentChild */], args: [NgLabelTemplateDirective, { read: core["ib" /* TemplateRef */], static: false },] }],
    multiLabelTemplate: [{ type: core["r" /* ContentChild */], args: [NgMultiLabelTemplateDirective, { read: core["ib" /* TemplateRef */], static: false },] }],
    headerTemplate: [{ type: core["r" /* ContentChild */], args: [NgHeaderTemplateDirective, { read: core["ib" /* TemplateRef */], static: false },] }],
    footerTemplate: [{ type: core["r" /* ContentChild */], args: [NgFooterTemplateDirective, { read: core["ib" /* TemplateRef */], static: false },] }],
    notFoundTemplate: [{ type: core["r" /* ContentChild */], args: [NgNotFoundTemplateDirective, { read: core["ib" /* TemplateRef */], static: false },] }],
    typeToSearchTemplate: [{ type: core["r" /* ContentChild */], args: [NgTypeToSearchTemplateDirective, { read: core["ib" /* TemplateRef */], static: false },] }],
    loadingTextTemplate: [{ type: core["r" /* ContentChild */], args: [NgLoadingTextTemplateDirective, { read: core["ib" /* TemplateRef */], static: false },] }],
    tagTemplate: [{ type: core["r" /* ContentChild */], args: [NgTagTemplateDirective, { read: core["ib" /* TemplateRef */], static: false },] }],
    loadingSpinnerTemplate: [{ type: core["r" /* ContentChild */], args: [NgLoadingSpinnerTemplateDirective, { read: core["ib" /* TemplateRef */], static: false },] }],
    dropdownPanel: [{ type: core["lb" /* ViewChild */], args: [Object(core["tb" /* forwardRef */])((/**
                 * @return {?}
                 */
                () => ng_select_ng_select_NgDropdownPanelComponent)), { static: false },] }],
    searchInput: [{ type: core["lb" /* ViewChild */], args: ['searchInput', { static: true },] }],
    ngOptions: [{ type: core["s" /* ContentChildren */], args: [ng_select_ng_select_NgOptionComponent, { descendants: true },] }],
    disabled: [{ type: core["y" /* HostBinding */], args: ['class.ng-select-disabled',] }],
    filtered: [{ type: core["y" /* HostBinding */], args: ['class.ng-select-filtered',] }],
    handleKeyDown: [{ type: core["z" /* HostListener */], args: ['keydown', ['$event'],] }]
};
if (false) {}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @return {?}
 */
function DefaultSelectionModelFactory() {
    return new DefaultSelectionModel();
}
/**
 * @record
 */
function SelectionModel() { }
if (false) {}
class DefaultSelectionModel {
    constructor() {
        this._selected = [];
    }
    /**
     * @return {?}
     */
    get value() {
        return this._selected;
    }
    /**
     * @param {?} item
     * @param {?} multiple
     * @param {?} groupAsModel
     * @return {?}
     */
    select(item, multiple, groupAsModel) {
        item.selected = true;
        if (groupAsModel || !item.children) {
            this._selected.push(item);
        }
        if (multiple) {
            if (item.parent) {
                /** @type {?} */
                const childrenCount = item.parent.children.length;
                /** @type {?} */
                const selectedCount = item.parent.children.filter((/**
                 * @param {?} x
                 * @return {?}
                 */
                x => x.selected)).length;
                item.parent.selected = childrenCount === selectedCount;
            }
            else if (item.children) {
                this._setChildrenSelectedState(item.children, true);
                this._removeChildren(item);
                if (!groupAsModel) {
                    this._selected = [...this._selected, ...item.children];
                }
            }
        }
    }
    /**
     * @param {?} item
     * @param {?} multiple
     * @return {?}
     */
    unselect(item, multiple) {
        this._selected = this._selected.filter((/**
         * @param {?} x
         * @return {?}
         */
        x => x !== item));
        item.selected = false;
        if (multiple) {
            if (item.parent && item.parent.selected) {
                /** @type {?} */
                const children = item.parent.children;
                this._removeParent(item.parent);
                this._removeChildren(item.parent);
                this._selected.push(...children.filter((/**
                 * @param {?} x
                 * @return {?}
                 */
                x => x !== item)));
                item.parent.selected = false;
            }
            else if (item.children) {
                this._setChildrenSelectedState(item.children, false);
                this._removeChildren(item);
            }
        }
    }
    /**
     * @param {?} keepDisabled
     * @return {?}
     */
    clear(keepDisabled) {
        this._selected = keepDisabled ? this._selected.filter((/**
         * @param {?} x
         * @return {?}
         */
        x => x.disabled)) : [];
    }
    /**
     * @private
     * @param {?} children
     * @param {?} selected
     * @return {?}
     */
    _setChildrenSelectedState(children, selected) {
        children.forEach((/**
         * @param {?} x
         * @return {?}
         */
        x => x.selected = selected));
    }
    /**
     * @private
     * @param {?} parent
     * @return {?}
     */
    _removeChildren(parent) {
        this._selected = this._selected.filter((/**
         * @param {?} x
         * @return {?}
         */
        x => x.parent !== parent));
    }
    /**
     * @private
     * @param {?} parent
     * @return {?}
     */
    _removeParent(parent) {
        this._selected = this._selected.filter((/**
         * @param {?} x
         * @return {?}
         */
        x => x !== parent));
    }
}
if (false) {}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
const ɵ0 = DefaultSelectionModelFactory;
class NgSelectModule {
}
NgSelectModule.decorators = [
    { type: core["K" /* NgModule */], args: [{
                declarations: [
                    ng_select_ng_select_NgDropdownPanelComponent,
                    ng_select_ng_select_NgOptionComponent,
                    ng_select_ng_select_NgSelectComponent,
                    NgOptgroupTemplateDirective,
                    NgOptionTemplateDirective,
                    NgLabelTemplateDirective,
                    NgMultiLabelTemplateDirective,
                    NgHeaderTemplateDirective,
                    NgFooterTemplateDirective,
                    NgNotFoundTemplateDirective,
                    NgTypeToSearchTemplateDirective,
                    NgLoadingTextTemplateDirective,
                    NgTagTemplateDirective,
                    NgLoadingSpinnerTemplateDirective,
                    NgItemLabelDirective
                ],
                imports: [
                    common["c" /* CommonModule */]
                ],
                exports: [
                    ng_select_ng_select_NgSelectComponent,
                    ng_select_ng_select_NgOptionComponent,
                    NgOptgroupTemplateDirective,
                    NgOptionTemplateDirective,
                    NgLabelTemplateDirective,
                    NgMultiLabelTemplateDirective,
                    NgHeaderTemplateDirective,
                    NgFooterTemplateDirective,
                    NgNotFoundTemplateDirective,
                    NgTypeToSearchTemplateDirective,
                    NgLoadingTextTemplateDirective,
                    NgTagTemplateDirective,
                    NgLoadingSpinnerTemplateDirective
                ],
                providers: [
                    { provide: SELECTION_MODEL_FACTORY, useValue: ɵ0 }
                ]
            },] }
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */


//# sourceMappingURL=ng-select-ng-select.js.map


/***/ })

};;